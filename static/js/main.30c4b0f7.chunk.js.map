{"version":3,"sources":["utils/fixtures/productFixtures.js","utils/fixtures/userFixtures.js","utils/links/back.js","mocks/handlers.js","mocks/browser.js","actions/profile/index.js","utils/constants/users.js","actions/info/index.js","utils/constants/info.js","saga/auth/signInSaga.js","actions/auth/signIn.js","utils/constants/auth.js","utils/constants/authSaga.js","saga/auth/signUpSaga.js","actions/auth/signUp.js","utils/constants/products.js","actions/products/index.js","saga/products/getProductListSaga.js","utils/constants/productsSaga.js","actions/productForm/index.js","saga/products/saveProductSaga.js","actions/productsSaga/index.js","saga/products/removeProductSaga.js","saga/products/getProductByNameSaga.js","utils/constants/usersSaga.js","saga/users/removeUserSaga.js","actions/usersSaga/index.js","actions/users/index.js","saga/users/getUserListSaga.js","saga/users/getUsersByNameSaga.js","actions/userForm/index.js","saga/users/saveUserSaga.js","saga/index.js","reducers/users/index.js","utils/methods.js","reducers/products/index.js","utils/constants/dates.js","utils/validation.js","reducers/productForm/index.js","reducers/userForm/index.js","reducers/auth/signIn.js","reducers/auth/signUp.js","reducers/profile/index.js","reducers/info/index.js","store.js","utils/links/front.js","components/appBar/MenuComponent.js","components/appBar/index.js","components/drawer/MenuElements.js","components/drawer/MenuElement.js","components/drawer/NavigationMenu.js","components/drawer/index.js","components/products/ProductCartItem.js","components/products/ProductCart.js","containers/products/ProductCart.js","components/products/ProductCard.js","components/products/ProductCards.js","containers/products/ProductCards.js","components/SearchLine.js","components/table/index.js","components/products/index.js","containers/products/index.js","components/users/index.js","containers/users/index.js","components/TextFieldComponent.js","components/ButtonSaveUpdate.js","components/auth/Birthday.js","components/userForm/index.js","containers/userForm/index.js","components/productForm/index.js","containers/productForm/index.js","components/profile/index.js","containers/profile/index.js","components/routers/index.js","components/app/index.js","containers/app/index.js","components/auth/AuthStyles.js","components/auth/SignHeader.js","components/auth/SignButton.js","components/auth/SignFooter.js","components/auth/SignUp.js","containers/auth/SignUp.js","actions/authSaga/signUp.js","components/auth/SignIn.js","containers/auth/SignIn.js","actions/authSaga/signIn.js","components/app/AppBody.js","containers/app/AppBody.js","components/info/index.js","containers/info/index.js","index.js"],"names":["id","name","price","image","firstName","lastName","birthday","email","phoneNumber","password","photo","END_POINT","PRODUCTS_API","PRODUCTS_API_SEARCH","USERS_API","USERS_API_SEARCH","SIGN_IN_API","SIGN_UP_API","handlers","rest","get","req","res","ctx","status","json","productFixtures","filteredName","url","searchParams","result","filter","includes","String","post","push","body","message","put","product","index","findIndex","splice","delete","productId","params","userFixtures","user","userId","worker","setupWorker","setCurrentUser","type","setMessageInfo","signInSaga","watchSignInSaga","select","state","signIn","call","axios","text","data","takeEvery","signUpSaga","watchSignUpSaga","signUp","key","addProductToCart","setProducts","products","getProductListSaga","watchGetProductListSaga","saveProductSaga","watchSaveProductSaga","productForm","removeProductSaga","watchRemoveProductSaga","action","getProductByNameSaga","watchGetProductByNameSaga","removeUserSaga","watchRemoveUserSaga","setUsers","users","getUserListSaga","watchGetUserListSaga","getUsersByNameSaga","watchGetUsersByNameSaga","saveUserSaga","watchSaveUserSaga","userForm","mainSaga","all","initialState","removeItemFrom","list","item","el","slice","getFormattedDate","date","Date","toISOString","getFloatingPointAmount","amount","Number","toFixed","getCountOfItemsWithId","items","count","productsInCart","MIN_DATE","MAX_DATE","isValidName","pattern","test","length","isValidDate","isValidEmail","toLowerCase","isValidPhoneNumber","number","isValidPassword","isValidImageUrl","patternBase64","patternURL","isValidPrice","isValidImage","isValidFirstName","isValidLastName","isValidBirthday","isValidPhoto","current","JSON","parse","sessionStorage","getItem","reducers","phone","profile","setItem","stringify","messageInfo","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","USERS","MenuComponent","anchorEl","setAnchorEl","onLogOut","open","Boolean","handleClose","Menu","onClose","MenuItem","Button","component","Link","to","onClick","useStyles","makeStyles","theme","root","zIndex","drawer","title","flexGrow","AppBarComponent","classes","React","useState","AppBar","className","position","Toolbar","Typography","variant","IconButton","event","currentTarget","Avatar","src","MenuElements","linkTo","Icon","Lock","ViewModule","ShoppingCart","People","MenuElement","countProductsInCart","fullWidth","ListItem","ListItemIcon","Badge","badgeContent","color","ListItemText","primary","NavigationMenu","menuElements","List","map","defaultProps","toolbar","mixins","width","flexShrink","drawerPaper","backgroundColor","DrawerComponent","Drawer","paper","ProductCartItem","style","onAddProduct","onRemoveProduct","TableRow","TableCell","ListItemAvatar","align","Remove","Add","table","minWidth","cell","ProductCart","totalSum","reduce","a","parseFloat","Container","maxWidth","marginTop","Table","TableBody","arr","indexOf","Box","display","mt","flexDirection","connect","dispatch","removeProductFromCart","card","maxHeight","border","media","paddingTop","content","textAlign","paddingLeft","divider","margin","palette","error","light","ProductCard","Card","CardMedia","CardContent","gutterBottom","Divider","alignItems","AddShoppingCart","ProductCards","fetchProducts","useEffect","Grid","container","spacing","sm","search","borderRadius","shape","alpha","common","white","height","float","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","padding","transition","transitions","create","SearchLine","onChangeFilteredName","Search","InputBase","placeholder","value","input","onChange","e","target","StyledTableCell","withStyles","head","fontSize","fontWeight","black","UniversalTable","columns","size","TableHead","label","field","render","Products","onCreate","onDelete","putProductToForm","productColumns","Update","Delete","startIcon","TableContainer","Paper","removeProduct","changeFilteredName","getProductsByFilteredNameSaga","div","contain","Users","fetchUsers","putUserToForm","userColumns","disabled","removeUser","changeFilteredUsername","getUsersByFilteredNameSaga","TextFieldComponent","isValidData","onChangeData","xs","TextField","required","ButtonSaveUpdate","isDisabledButtonSave","onSave","Save","Birthday","onChangeBirthday","dateOpen","setDateOpen","format","inputVariant","minDate","maxDate","animateYearScrolling","UserForm","onChangeId","onChangeFirstName","onChangeLastName","onChangeEmail","onChangePhoneNumber","onChangePhoto","onChangePassword","changeId","changeFirstName","changeLastName","changeBirthday","changePhoneNumber","changeEmail","changePhoto","changePassword","saveUser","ProductForm","onChangeName","onChangePrice","onChangeImage","updateId","updateName","updatePrice","updateImage","saveProduct","Profile","marginLeft","Routers","exact","path","App","AuthStyles","avatar","grid","submit","SignHeader","SignButton","isDisabledButton","onClickButton","SignFooter","SignUp","onChangePhone","onSignUp","LockOutlined","changePhone","SignIn","onSignIn","LockOpen","changeEmailAtLogin","changePasswordAtLogin","AppBody","currentUser","Alert","props","elevation","MessageInfo","reason","Snackbar","autoHideDuration","severity","createTheme","main","secondary","window","location","pathname","start","serviceWorker","BASE_PATH_WITH_TRAILING_SLASH","ThemeProvider","CssBaseline","utils","DateFnsUtils","basename","document","getElementById"],"mappings":"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","file":"static/js/main.30c4b0f7.chunk.js","sourcesContent":["export default [\n    {\n        id: \"1\",\n        name: \"Gymnastic Ball\",\n        price: 490.00,\n        image: \"https://content2.rozetka.com.ua/goods/images/big/63425039.jpg\"\n    },\n    {\n        id: \"2\",\n        name: \"Press Roller\",\n        price: 215.00,\n        image: \"https://content2.rozetka.com.ua/goods/images/big/37886025.jpg\"\n    },\n    {\n        id: \"3\",\n        name: \"Skipping Rope\",\n        price: 150.00,\n        image: \"https://content1.rozetka.com.ua/goods/images/big/54450642.jpg\"\n    },\n    {\n        id: \"4\",\n        name: \"Massage Hoop\",\n        price: 279.00,\n        image: \"https://content1.rozetka.com.ua/goods/images/big/212057062.jpg\"\n    },\n    {\n        id: \"5\",\n        name: \"Weights\",\n        price: 89.00,\n        image: \"https://content2.rozetka.com.ua/goods/images/big/230557950.jpg\"\n    },\n    {\n        id: \"6\",\n        name: \"Gymnastic Mat\",\n        price: 1312.00,\n        image: \"https://content2.rozetka.com.ua/goods/images/big/193749581.jpg\"\n    },\n    {\n        id: \"7\",\n        name: \"Crossfit Rope\",\n        price: 1999.00,\n        image: \"https://content2.rozetka.com.ua/goods/images/big/16623441.jpg\"\n    }\n];","export default [\n    {\n        id: \"1\",\n        firstName: \"Admin\",\n        lastName: \"Admin\",\n        birthday: \"1997-01-26\",\n        email: \"admin@gmail.com\",\n        phoneNumber: \"+380999999999\",\n        password: \"00000000\",\n        photo: \"https://storge.pic2.me/upload/728/57d92d0d5917a.jpg\"\n    },\n    {\n        id: \"2\",\n        firstName: \"Leyla\",\n        lastName: \"Ram\",\n        birthday: \"1998-12-10\",\n        email: \"leylaram@gmail.com\",\n        phoneNumber: \"+380994561230\",\n        password: \"00000000\",\n        photo: \"https://storge.pic2.me/upload/728/57d92d0d5917a.jpg\"\n    },\n    {\n        id: \"3\",\n        firstName: \"Walter\",\n        lastName: \"White\",\n        birthday: \"2000-03-29\",\n        email: \"walterwhite@gmail.com\",\n        phoneNumber: \"+380664561230\",\n        password: \"00000000\",\n        photo: \"https://storge.pic2.me/upload/728/57d92d0d5917a.jpg\"\n    },\n    {\n        id: \"4\",\n        firstName: \"Ruby\",\n        lastName: \"Rose\",\n        birthday: \"2013-11-09\",\n        email: \"rubyrose@gmail.com\",\n        phoneNumber: \"+380665558230\",\n        password: \"00000000\",\n        photo: \"https://storge.pic2.me/upload/728/57d92d0d5917a.jpg\"\n    }\n];","export const LOCAL_VERSION = \"http://localhost:9000\";\nexport const PRODUCTION_VERSION = \"https://products-react-js.herokuapp.com\";\n\nexport const END_POINT = process.env.NODE_ENV === \"development\" ? LOCAL_VERSION : PRODUCTION_VERSION;\n\nexport const PRODUCTS_API = END_POINT + \"/api/products\";\nexport const PRODUCTS_API_SEARCH = END_POINT + \"/api/products/search\";\n\nexport const USERS_API = END_POINT + \"/api/users\";\nexport const USERS_API_SEARCH = END_POINT + \"/api/users/search\";\n\nexport const SIGN_IN_API = USERS_API + \"/sign-in\";\nexport const SIGN_UP_API = USERS_API + \"/sign-up\";","import { rest } from \"msw\";\nimport productFixtures from \"../utils/fixtures/productFixtures\";\nimport userFixtures from \"../utils/fixtures/userFixtures\";\nimport {\n    PRODUCTS_API,\n    PRODUCTS_API_SEARCH,\n    SIGN_IN_API,\n    SIGN_UP_API,\n    USERS_API,\n    USERS_API_SEARCH\n} from \"../utils/links/back\";\n\nexport const handlers = [\n    rest.get(PRODUCTS_API, (req, res, ctx) => {\n        return res(\n            ctx.status(200),\n            ctx.json(productFixtures)\n        );\n    }),\n    rest.get(PRODUCTS_API_SEARCH, (req, res, ctx) => {\n        const filteredName = req.url.searchParams.get(\"name\");\n\n        const result = productFixtures.filter(({ id, name, price }) =>\n            id.includes(filteredName) ||\n            name.includes(filteredName) ||\n            String(price).includes(filteredName)\n        );\n\n        return res(\n            ctx.status(200),\n            ctx.json(result)\n        );\n    }),\n    rest.post(PRODUCTS_API, (req, res, ctx) => {\n        productFixtures.push(req.body);\n\n        return res(\n            ctx.status(200),\n            ctx.json({ message: \"Product is saved.\" })\n        );\n    }),\n    rest.put(PRODUCTS_API, (req, res, ctx) => {\n        const product = req.body;\n        const index = productFixtures.findIndex(({ id }) => id === product.id);\n        productFixtures.splice(index, 1, product);\n\n        return res(\n            ctx.status(200),\n            ctx.json({ message: \"Product is updated.\" })\n        );\n    }),\n    rest.delete(PRODUCTS_API + \"/:productId\", (req, res, ctx) => {\n        const { productId } = req.params;\n        const index = productFixtures.findIndex(({ id }) => id === productId);\n\n        if (index === -1) {\n            return res(ctx.status(404));\n        }\n\n        productFixtures.splice(index, 1);\n        return res(ctx.status(200));\n    }),\n\n    rest.get(USERS_API, (req, res, ctx) => {\n        return res(\n            ctx.status(200),\n            ctx.json(userFixtures)\n        );\n    }),\n    rest.get(USERS_API_SEARCH, (req, res, ctx) => {\n        const filteredName = req.url.searchParams.get(\"name\");\n\n        const result = userFixtures.filter((user) =>\n            user.id.includes(filteredName) ||\n            user.firstName.includes(filteredName) ||\n            user.lastName.includes(filteredName) ||\n            user.birthday.includes(filteredName) ||\n            user.phoneNumber.includes(filteredName) ||\n            user.email.includes(filteredName)\n        );\n\n        return res(\n            ctx.status(200),\n            ctx.json(result)\n        );\n    }),\n    rest.put(USERS_API, (req, res, ctx) => {\n        const user = req.body;\n        const index = userFixtures.findIndex(({ id }) => id === user.id);\n        userFixtures.splice(index, 1, user);\n\n        return res(\n            ctx.status(200),\n            ctx.json({ message: \"User is updated.\" })\n        );\n    }),\n    rest.delete(USERS_API + \"/:userId\", (req, res, ctx) => {\n        const { userId } = req.params;\n        const index = userFixtures.findIndex(({ id }) => id === userId);\n\n        if (index === -1) {\n            return res(ctx.status(404));\n        }\n\n        userFixtures.splice(index, 1);\n        return res(ctx.status(200));\n    }),\n\n    rest.get(SIGN_IN_API, (req, res, ctx) => {\n        const email = req.url.searchParams.get(\"email\");\n        const password = req.url.searchParams.get(\"password\");\n\n        for (const user of userFixtures) {\n            if (user.email === email && user.password === password) {\n                return res(\n                    ctx.status(200),\n                    ctx.json(user)\n                );\n            }\n        }\n\n        return res(ctx.status(403));\n    }),\n    rest.post(SIGN_UP_API, (req, res, ctx) => {\n        userFixtures.push(req.body);\n\n        return res(\n            ctx.status(200),\n            ctx.json(req.body)\n        );\n    })\n];","import { setupWorker } from \"msw\";\nimport { handlers } from \"./handlers\";\n\n// This configures a Service Worker with the given request handlers.\nexport const worker = setupWorker(...handlers);","import { SET_CURRENT_USER } from \"../../utils/constants/users\";\n\nexport const setCurrentUser = (user) => ({\n    type: SET_CURRENT_USER,\n    user\n});\n\nexport const logOut = () => ({\n    type: SET_CURRENT_USER,\n    user: null\n});","export const CHANGE_USER_ID = \"CHANGE_USER_ID\";\nexport const CHANGE_USER_FIRST_NAME = \"CHANGE_USER_FIRST_NAME\";\nexport const CHANGE_USER_LAST_NAME = \"CHANGE_USER_LAST_NAME\";\nexport const CHANGE_USER_BIRTHDAY = \"CHANGE_USER_BIRTHDAY\";\nexport const CHANGE_USER_PHONE_NUMBER = \"CHANGE_USER_PHONE_NUMBER\";\nexport const CHANGE_USER_EMAIL = \"CHANGE_USER_EMAIL\";\nexport const CHANGE_USER_PHOTO = \"CHANGE_USER_PHOTO\";\nexport const CHANGE_USER_PASSWORD = \"CHANGE_USER_PASSWORD\";\n\nexport const SET_USERS = \"SET_USERS\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const CHANGE_FILTERED_USERNAME = \"CHANGE_FILTERED_USERNAME\";\n\nexport const PUT_USER_TO_FORM = \"PUT_USER_TO_FORM\";\nexport const CLEAR_USER_FORM = \"CLEAR_USER_FORM\";","import { SET_MESSAGE_INFO } from \"../../utils/constants/info\";\n\nexport const setMessageInfo = (message) => ({\n    type: SET_MESSAGE_INFO,\n    message\n});\n\nexport const closeMessage = () => ({\n    type: SET_MESSAGE_INFO,\n    message: null\n});\n","export const SET_MESSAGE_INFO = \"SET_MESSAGE_INFO\";","import axios from \"axios\";\nimport { call, put, select, takeEvery } from \"redux-saga/effects\";\nimport { setCurrentUser } from \"../../actions/profile\";\nimport { setMessageInfo } from \"../../actions/info\";\nimport { clearSignIn } from \"../../actions/auth/signIn\";\nimport { SIGN_IN_API } from \"../../utils/links/back\";\nimport { SIGN_IN_SAGA } from \"../../utils/constants/authSaga\";\n\nexport function* signInSaga() {\n    try {\n        const { email, password } = yield select(state => state.signIn);\n        const result = yield call(\n            axios.get,\n            SIGN_IN_API,\n            {\n                params: {\n                    email,\n                    password\n                }\n            }\n        );\n\n        yield put(setMessageInfo({ type: \"success\", text: \"Login OK\" }));\n        yield put(setCurrentUser(result.data));\n    } catch (e) {\n        yield put(setMessageInfo({\n            type: \"error\",\n            text: \"You entered an incorrect username or password.\"\n        }));\n    }\n\n    yield put(clearSignIn());\n}\n\nexport function* watchSignInSaga() {\n    yield takeEvery(SIGN_IN_SAGA, signInSaga);\n}","import { CHANGE_EMAIL_AT_LOGIN, CHANGE_PASSWORD_AT_LOGIN, CLEAR_SIGN_IN } from \"../../utils/constants/auth\";\n\nexport const changeEmailAtLogin = (email) => ({\n    type: CHANGE_EMAIL_AT_LOGIN,\n    email\n});\n\nexport const changePasswordAtLogin = (password) => ({\n    type: CHANGE_PASSWORD_AT_LOGIN,\n    password\n});\n\nexport const clearSignIn = () => ({\n    type: CLEAR_SIGN_IN\n});","export const CHANGE_EMAIL_AT_LOGIN = \"CHANGE_EMAIL_AT_LOGIN\";\nexport const CHANGE_PASSWORD_AT_LOGIN = \"CHANGE_PASSWORD_AT_LOGIN\";\n\nexport const CHANGE_FIRST_NAME = \"CHANGE_FIRST_NAME\";\nexport const CHANGE_LAST_NAME = \"CHANGE_LAST_NAME\";\nexport const CHANGE_EMAIL = \"CHANGE_EMAIL\";\nexport const CHANGE_PASSWORD = \"CHANGE_PASSWORD\";\nexport const CHANGE_BIRTHDAY = \"CHANGE_BIRTHDAY\";\nexport const CHANGE_PHONE = \"CHANGE_PHONE\";\nexport const CHANGE_PHOTO = \"CHANGE_PHOTO\";\n\nexport const CLEAR_SIGN_IN = \"CLEAR_SIGN_IN\";\nexport const CLEAR_SIGN_UP = \"CLEAR_SIGN_UP\";","export const SIGN_IN_SAGA = \"SIGN_IN_SAGA\";\nexport const SIGN_UP_SAGA = \"SIGN_UP_SAGA\";","import axios from \"axios\";\nimport key from \"weak-key\";\nimport { call, put, select, takeEvery } from \"redux-saga/effects\";\nimport { setCurrentUser } from \"../../actions/profile\";\nimport { setMessageInfo } from \"../../actions/info\";\nimport { clearSignUp } from \"../../actions/auth/signUp\";\nimport { SIGN_UP_API } from \"../../utils/links/back\";\nimport { SIGN_UP_SAGA } from \"../../utils/constants/authSaga\";\n\nexport function* signUpSaga() {\n    try {\n        const user = yield select(state => state.signUp);\n        const { firstName, lastName, birthday, email, phoneNumber, photo, password } = user;\n\n        const result = yield call(\n            axios.post,\n            SIGN_UP_API,\n            {\n                id: key(user),\n                firstName,\n                lastName,\n                birthday,\n                email,\n                phoneNumber,\n                photo,\n                password\n            }\n        );\n\n        yield put(setCurrentUser(result.data));\n    } catch (e) {\n        yield put(setMessageInfo({ type: \"error\", text: e.message }));\n    }\n\n    yield put(clearSignUp());\n}\n\nexport function* watchSignUpSaga() {\n    yield takeEvery(SIGN_UP_SAGA, signUpSaga);\n}","import {\n    CHANGE_BIRTHDAY,\n    CHANGE_EMAIL,\n    CHANGE_FIRST_NAME,\n    CHANGE_LAST_NAME,\n    CHANGE_PASSWORD,\n    CHANGE_PHONE,\n    CHANGE_PHOTO,\n    CLEAR_SIGN_UP\n} from \"../../utils/constants/auth\";\n\nexport const changeFirstName = (firstName) => ({\n    type: CHANGE_FIRST_NAME,\n    firstName\n});\n\nexport const changeLastName = (lastName) => ({\n    type: CHANGE_LAST_NAME,\n    lastName\n});\n\nexport const changeEmail = (email) => ({\n    type: CHANGE_EMAIL,\n    email\n});\n\nexport const changePassword = (password) => ({\n    type: CHANGE_PASSWORD,\n    password\n});\n\nexport const changeBirthday = (birthday) => ({\n    type: CHANGE_BIRTHDAY,\n    birthday\n});\n\nexport const changePhone = (phone) => ({\n    type: CHANGE_PHONE,\n    phone\n});\n\nexport const changePhoto = (photo) => ({\n    type: CHANGE_PHOTO,\n    photo\n});\n\nexport const clearSignUp = () => ({\n    type: CLEAR_SIGN_UP\n});","export const ADD_PRODUCT_TO_CART = \"ADD_PRODUCT_TO_CART\";\nexport const REMOVE_PRODUCT_FROM_CART = \"REMOVE_PRODUCT_FROM_CART\";\n\nexport const SET_PRODUCTS = \"SET_PRODUCTS\";\nexport const CHANGE_FILTERED_NAME = \"CHANGE_FILTERED_NAME\";\n\nexport const UPDATE_ID = \"UPDATE_ID\";\nexport const UPDATE_NAME = \"UPDATE_NAME\";\nexport const UPDATE_PRICE = \"UPDATE_PRICE\";\nexport const UPDATE_IMAGE = \"UPDATE_IMAGE\";\n\nexport const PUT_PRODUCT_TO_FORM = \"PUT_PRODUCT_TO_FORM\";\nexport const CLEAR_PRODUCT_FORM = \"CLEAR_PRODUCT_FORM\";","import {\n    ADD_PRODUCT_TO_CART,\n    CHANGE_FILTERED_NAME,\n    REMOVE_PRODUCT_FROM_CART,\n    SET_PRODUCTS\n} from \"../../utils/constants/products\";\n\nexport const addProductToCart = (product) => ({\n    type: ADD_PRODUCT_TO_CART,\n    product\n});\n\nexport const removeProductFromCart = (product) => ({\n    type: REMOVE_PRODUCT_FROM_CART,\n    product\n});\n\nexport const changeFilteredName = (filteredName) => ({\n    type: CHANGE_FILTERED_NAME,\n    filteredName\n});\n\nexport const setProducts = (products) => ({\n    type: SET_PRODUCTS,\n    products\n});","import axios from \"axios\";\nimport { call, put, takeEvery } from \"redux-saga/effects\";\nimport { setProducts } from \"../../actions/products\";\nimport { setMessageInfo } from \"../../actions/info\";\nimport { PRODUCTS_API } from \"../../utils/links/back\";\nimport { GET_PRODUCTS_SAGA } from \"../../utils/constants/productsSaga\";\n\nexport function* getProductListSaga() {\n    try {\n        const result = yield call(\n            axios.get,\n            PRODUCTS_API\n        );\n\n        yield put(setProducts(result.data));\n    } catch (e) {\n        yield put(setMessageInfo({\n            type: \"warning\",\n            text: \"Product list is empty!\"\n        }));\n    }\n}\n\nexport function* watchGetProductListSaga() {\n    yield takeEvery(GET_PRODUCTS_SAGA, getProductListSaga);\n}","export const GET_PRODUCTS_SAGA = \"GET_PRODUCTS_SAGA\";\nexport const GET_PRODUCTS_BY_NAME_SAGA = \"GET_PRODUCTS_BY_NAME_SAGA\";\nexport const SAVE_PRODUCT_SAGA = \"SAVE_PRODUCT_SAGA\";\nexport const REMOVE_PRODUCT_SAGA = \"REMOVE_PRODUCT_SAGA\";","import {\n    CLEAR_PRODUCT_FORM,\n    PUT_PRODUCT_TO_FORM,\n    UPDATE_ID,\n    UPDATE_IMAGE,\n    UPDATE_NAME,\n    UPDATE_PRICE\n} from \"../../utils/constants/products\";\n\nexport const updateId = (id) => ({\n    type: UPDATE_ID,\n    id\n});\n\nexport const updateName = (name) => ({\n    type: UPDATE_NAME,\n    name\n});\n\nexport const updatePrice = (price) => ({\n    type: UPDATE_PRICE,\n    price\n});\n\nexport const updateImage = (image) => ({\n    type: UPDATE_IMAGE,\n    image\n});\n\nexport const putProductToForm = (product) => ({\n    type: PUT_PRODUCT_TO_FORM,\n    product\n});\n\nexport const clearProductForm = () => ({\n    type: CLEAR_PRODUCT_FORM\n});","import axios from \"axios\";\nimport key from \"weak-key\";\nimport { call, put, select, takeEvery } from \"redux-saga/effects\";\nimport { setMessageInfo } from \"../../actions/info\";\nimport { clearProductForm } from \"../../actions/productForm\";\nimport { PRODUCTS_API } from \"../../utils/links/back\";\nimport { SAVE_PRODUCT_SAGA } from \"../../utils/constants/productsSaga\";\n\nexport function* saveProductSaga() {\n    try {\n        const { product } = yield select(state => state.productForm);\n        let result;\n\n        if (product.id) {\n            result = yield call(\n                axios.put,\n                PRODUCTS_API,\n                product\n            );\n        } else {\n            product.id = key(product);\n\n            result = yield call(\n                axios.post,\n                PRODUCTS_API,\n                product\n            );\n        }\n\n        yield put(setMessageInfo({ type: \"success\", text: result.data.message }));\n    } catch (e) {\n        yield put(setMessageInfo({ type: \"error\", text: e.message }));\n    }\n\n    yield put(clearProductForm());\n}\n\nexport function* watchSaveProductSaga() {\n    yield takeEvery(SAVE_PRODUCT_SAGA, saveProductSaga);\n}","import {\n    GET_PRODUCTS_BY_NAME_SAGA,\n    GET_PRODUCTS_SAGA,\n    REMOVE_PRODUCT_SAGA,\n    SAVE_PRODUCT_SAGA\n} from \"../../utils/constants/productsSaga\";\n\nexport const saveProduct = (product) => ({\n    type: SAVE_PRODUCT_SAGA,\n    product\n});\n\nexport const removeProduct = (id) => ({\n    type: REMOVE_PRODUCT_SAGA,\n    id\n});\n\nexport const getProductsSaga = () => ({\n    type: GET_PRODUCTS_SAGA\n});\n\nexport const getProductsByFilteredNameSaga = (filteredName) => ({\n    type: GET_PRODUCTS_BY_NAME_SAGA,\n    filteredName\n});","import axios from \"axios\";\nimport { call, put, takeEvery } from \"redux-saga/effects\";\nimport { setMessageInfo } from \"../../actions/info\";\nimport { getProductsSaga } from \"../../actions/productsSaga\";\nimport { PRODUCTS_API } from \"../../utils/links/back\";\nimport { REMOVE_PRODUCT_SAGA } from \"../../utils/constants/productsSaga\";\n\nexport function* removeProductSaga(action) {\n    try {\n        yield call(\n            axios.delete,\n            PRODUCTS_API + \"/\" + action.id\n        );\n\n        yield put(getProductsSaga());\n    } catch (e) {\n        yield put(setMessageInfo({ type: \"error\", text: e.message }));\n    }\n}\n\nexport function* watchRemoveProductSaga() {\n    yield takeEvery(REMOVE_PRODUCT_SAGA, removeProductSaga);\n}","import axios from \"axios\";\nimport { call, put, select, takeEvery } from \"redux-saga/effects\";\nimport { setProducts } from \"../../actions/products\";\nimport { setMessageInfo } from \"../../actions/info\";\nimport { GET_PRODUCTS_BY_NAME_SAGA } from \"../../utils/constants/productsSaga\";\nimport { PRODUCTS_API_SEARCH } from \"../../utils/links/back\";\n\nexport function* getProductByNameSaga() {\n    try {\n        const { filteredName } = yield select(state => state.products);\n        const result = yield call(\n            axios.get,\n            PRODUCTS_API_SEARCH,\n            {\n                params: {\n                    name: filteredName\n                }\n            }\n        );\n\n        yield put(setProducts(result.data));\n    } catch (e) {\n        yield put(setMessageInfo({ type: \"error\", text: e.message }));\n    }\n}\n\nexport function* watchGetProductByNameSaga() {\n    yield takeEvery(GET_PRODUCTS_BY_NAME_SAGA, getProductByNameSaga);\n}","export const GET_USERS_SAGA = \"GET_USERS_SAGA\";\nexport const SAVE_USER_SAGA = \"SAVE_USER_SAGA\";\nexport const REMOVE_USER_SAGA = \"REMOVE_USER_SAGA\";\nexport const GET_USERS_BY_NAME_SAGA = \"GET_USERS_BY_NAME_SAGA\";","import axios from \"axios\";\nimport { call, put, takeEvery } from \"redux-saga/effects\";\nimport { setMessageInfo } from \"../../actions/info\";\nimport { getUsersSaga } from \"../../actions/usersSaga\";\nimport { USERS_API } from \"../../utils/links/back\";\nimport { REMOVE_USER_SAGA } from \"../../utils/constants/usersSaga\";\n\nexport function* removeUserSaga(action) {\n    try {\n        yield call(\n            axios.delete,\n            USERS_API + \"/\" + action.id\n        );\n\n        yield put(getUsersSaga());\n    } catch (e) {\n        yield put(setMessageInfo({ type: \"error\", text: e.message }));\n    }\n}\n\nexport function* watchRemoveUserSaga() {\n    yield takeEvery(REMOVE_USER_SAGA, removeUserSaga);\n}","import {\n    REMOVE_USER_SAGA,\n    GET_USERS_BY_NAME_SAGA,\n    GET_USERS_SAGA,\n    SAVE_USER_SAGA\n} from \"../../utils/constants/usersSaga\";\n\nexport const saveUser = (user) => ({\n    type: SAVE_USER_SAGA,\n    user\n});\n\nexport const removeUser = (id) => ({\n    type: REMOVE_USER_SAGA,\n    id\n});\n\nexport const getUsersSaga = () => ({\n    type: GET_USERS_SAGA\n});\n\nexport const getUsersByFilteredNameSaga = (filteredName) => ({\n    type: GET_USERS_BY_NAME_SAGA,\n    filteredName\n});","import { CHANGE_FILTERED_USERNAME, SET_USERS } from \"../../utils/constants/users\";\n\nexport const changeFilteredUsername = (filteredName) => ({\n    type: CHANGE_FILTERED_USERNAME,\n    filteredName\n});\n\nexport const setUsers = (users) => ({\n    type: SET_USERS,\n    users\n});","import axios from \"axios\";\nimport { call, put, takeEvery } from \"redux-saga/effects\";\nimport { setUsers } from \"../../actions/users\";\nimport { USERS_API } from \"../../utils/links/back\";\nimport { GET_USERS_SAGA } from \"../../utils/constants/usersSaga\";\nimport { setMessageInfo } from \"../../actions/info\";\n\nexport function* getUserListSaga() {\n    try {\n        const result = yield call(\n            axios.get,\n            USERS_API\n        );\n\n        yield put(setUsers(result.data));\n    } catch (e) {\n        yield put(setMessageInfo({\n            type: \"warning\",\n            text: \"User list is empty!\"\n        }));\n    }\n}\n\nexport function* watchGetUserListSaga() {\n    yield takeEvery(GET_USERS_SAGA, getUserListSaga);\n}","import axios from \"axios\";\nimport { call, put, select, takeEvery } from \"redux-saga/effects\";\nimport { setUsers } from \"../../actions/users\";\nimport { setMessageInfo } from \"../../actions/info\";\nimport { USERS_API_SEARCH } from \"../../utils/links/back\";\nimport { GET_USERS_BY_NAME_SAGA } from \"../../utils/constants/usersSaga\";\n\nexport function* getUsersByNameSaga() {\n    try {\n        const { filteredName } = yield select(state => state.users);\n        const result = yield call(\n            axios.get,\n            USERS_API_SEARCH,\n            {\n                params: {\n                    name: filteredName\n                }\n            }\n        );\n\n        yield put(setUsers(result.data));\n    } catch (e) {\n        yield put(setMessageInfo({ type: \"error\", text: e.message }));\n    }\n}\n\nexport function* watchGetUsersByNameSaga() {\n    yield takeEvery(GET_USERS_BY_NAME_SAGA, getUsersByNameSaga);\n}","import {\n    CHANGE_USER_BIRTHDAY,\n    CHANGE_USER_EMAIL,\n    CHANGE_USER_FIRST_NAME,\n    CHANGE_USER_ID,\n    CHANGE_USER_LAST_NAME,\n    CHANGE_USER_PASSWORD,\n    CHANGE_USER_PHONE_NUMBER,\n    CHANGE_USER_PHOTO,\n    CLEAR_USER_FORM,\n    PUT_USER_TO_FORM\n} from \"../../utils/constants/users\";\n\nexport const changeId = (id) => ({\n    type: CHANGE_USER_ID,\n    id\n});\n\nexport const changeFirstName = (firstName) => ({\n    type: CHANGE_USER_FIRST_NAME,\n    firstName\n});\n\nexport const changeLastName = (lastName) => ({\n    type: CHANGE_USER_LAST_NAME,\n    lastName\n});\n\nexport const changeBirthday = (birthday) => ({\n    type: CHANGE_USER_BIRTHDAY,\n    birthday\n});\n\nexport const changePhoneNumber = (phoneNumber) => ({\n    type: CHANGE_USER_PHONE_NUMBER,\n    phoneNumber\n});\n\nexport const changeEmail = (email) => ({\n    type: CHANGE_USER_EMAIL,\n    email\n});\n\nexport const changePhoto = (photo) => ({\n    type: CHANGE_USER_PHOTO,\n    photo\n});\n\nexport const changePassword = (password) => ({\n    type: CHANGE_USER_PASSWORD,\n    password\n});\n\nexport const putUserToForm = (user) => ({\n    type: PUT_USER_TO_FORM,\n    user\n});\n\nexport const clearUserForm = () => ({\n    type: CLEAR_USER_FORM\n});","import axios from \"axios\";\nimport { call, put, select, takeEvery } from \"redux-saga/effects\";\nimport { setMessageInfo } from \"../../actions/info\";\nimport { clearUserForm } from \"../../actions/userForm\";\nimport { USERS_API } from \"../../utils/links/back\";\nimport { SAVE_USER_SAGA } from \"../../utils/constants/usersSaga\";\n\nexport function* saveUserSaga() {\n    try {\n        const { user } = yield select(state => state.userForm);\n        let result;\n\n        if (user.id) {\n            result = yield call(\n                axios.put,\n                USERS_API,\n                user\n            );\n        } else {\n            result = yield call(\n                axios.post,\n                USERS_API,\n                user\n            );\n        }\n\n        yield put(setMessageInfo({ type: \"success\", text: result.data.message }));\n    } catch (e) {\n        yield put(setMessageInfo({ type: \"error\", text: e.message }));\n    }\n\n    yield put(clearUserForm());\n}\n\nexport function* watchSaveUserSaga() {\n    yield takeEvery(SAVE_USER_SAGA, saveUserSaga);\n}","import { all } from \"redux-saga/effects\";\nimport { watchSignInSaga } from \"./auth/signInSaga\";\nimport { watchSignUpSaga } from \"./auth/signUpSaga\";\nimport { watchGetProductListSaga } from \"./products/getProductListSaga\";\nimport { watchSaveProductSaga } from \"./products/saveProductSaga\";\nimport { watchRemoveProductSaga } from \"./products/removeProductSaga\";\nimport { watchGetProductByNameSaga } from \"./products/getProductByNameSaga\";\nimport { watchRemoveUserSaga } from \"./users/removeUserSaga\";\nimport { watchGetUserListSaga } from \"./users/getUserListSaga\";\nimport { watchGetUsersByNameSaga } from \"./users/getUsersByNameSaga\";\nimport { watchSaveUserSaga } from \"./users/saveUserSaga\";\n\nexport default function* mainSaga() {\n    yield all([\n        watchSignInSaga(),\n        watchSignUpSaga(),\n        watchGetProductListSaga(),\n        watchSaveProductSaga(),\n        watchRemoveProductSaga(),\n        watchGetProductByNameSaga(),\n        watchRemoveUserSaga(),\n        watchGetUserListSaga(),\n        watchGetUsersByNameSaga(),\n        watchSaveUserSaga()\n    ]);\n}","import { CHANGE_FILTERED_USERNAME, SET_USERS } from \"../../utils/constants/users\";\n\nconst initialState = {\n    users: [],\n    filteredName: \"\"\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case CHANGE_FILTERED_USERNAME: {\n            return {\n                ...state,\n                filteredName: action.filteredName\n            };\n        }\n        case SET_USERS: {\n            return {\n                ...state,\n                users: action.users\n            };\n        }\n        default:\n            return state;\n    }\n}","export function removeItemFrom(list, item) {\n    const index = list.findIndex((el) => el.id === item.id);\n\n    return [\n        ...list.slice(0, index),\n        ...list.slice(index + 1)\n    ];\n}\n\nexport function getFormattedDate(date = new Date()) {\n    return new Date(date).toISOString().slice(0, 10);\n}\n\nexport function getFloatingPointAmount(amount) {\n    return Number(amount).toFixed(2);\n}\n\nexport function getCountOfItemsWithId(items, id) {\n    let count = 0;\n\n    for (const item of items) {\n        if (item.id === id) count++;\n    }\n\n    return count;\n}","import { removeItemFrom } from \"../../utils/methods\";\nimport {\n    ADD_PRODUCT_TO_CART,\n    CHANGE_FILTERED_NAME,\n    REMOVE_PRODUCT_FROM_CART,\n    SET_PRODUCTS\n} from \"../../utils/constants/products\";\n\nconst initialState = {\n    products: [],\n    productsInCart: [],\n    filteredName: \"\"\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_PRODUCT_TO_CART: {\n            return {\n                ...state,\n                productsInCart: [...state.productsInCart, action.product]\n            };\n        }\n        case REMOVE_PRODUCT_FROM_CART: {\n            return {\n                ...state,\n                productsInCart: removeItemFrom(state.productsInCart, action.product)\n            };\n        }\n        case CHANGE_FILTERED_NAME: {\n            return {\n                ...state,\n                filteredName: action.filteredName\n            };\n        }\n        case SET_PRODUCTS: {\n            return {\n                ...state,\n                products: action.products\n            };\n        }\n        default:\n            return state;\n    }\n}","export const MIN_DATE = new Date(\"1950-01-01\");\nexport const MAX_DATE = new Date();","import { MAX_DATE, MIN_DATE } from \"./constants/dates\";\n\nexport function isValidName(name = \"\") {\n    const pattern = /^[A-Za-z]+[\\s]?[A-Za-z]+$/;\n    return pattern.test(name) && name.length > 1;\n}\n\nexport function isValidDate(date = new Date()) {\n    return new Date(date) >= MIN_DATE && new Date(date) <= MAX_DATE;\n}\n\nexport function isValidEmail(email = \"\") {\n    const pattern = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return pattern.test(String(email).toLowerCase());\n}\n\nexport function isValidPhoneNumber(number = \"\") {\n    const pattern = /^\\+380\\d{3}\\d{2}\\d{2}\\d{2}$/;\n    return pattern.test(number);\n}\n\nexport function isValidPassword(password = \"\") {\n    return password.length > 7;\n}\n\nexport function isValidImageUrl(url = \"\") {\n    const patternBase64 = /^data:image\\/jpeg;base64,(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$/;\n    const patternURL = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w-]+)+[\\w\\-_~:/?#[\\]@!&',;=.]+$/;\n    return patternBase64.test(url) || patternURL.test(url);\n}\n\nexport function isValidPrice(price) {\n    const pattern = /^[0-9]+(?:[.,][0-9]{1,2})*$/;\n    return pattern.test(price);\n}","import { isValidImageUrl, isValidName, isValidPrice } from \"../../utils/validation\";\nimport {\n    CLEAR_PRODUCT_FORM,\n    PUT_PRODUCT_TO_FORM,\n    UPDATE_ID,\n    UPDATE_IMAGE,\n    UPDATE_NAME,\n    UPDATE_PRICE\n} from \"../../utils/constants/products\";\n\nconst initialState = {\n    product: {\n        id: \"\",\n        name: \"\",\n        isValidName: false,\n        price: \"\",\n        isValidPrice: false,\n        image: \"\",\n        isValidImage: false\n    }\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case UPDATE_ID: {\n            return {\n                ...state,\n                product: {\n                    ...state.product,\n                    id: action.id\n                }\n            };\n        }\n        case UPDATE_NAME: {\n            return {\n                ...state,\n                product: {\n                    ...state.product,\n                    name: action.name,\n                    isValidName: isValidName(action.name)\n                }\n            };\n        }\n        case UPDATE_PRICE: {\n            return {\n                ...state,\n                product: {\n                    ...state.product,\n                    price: action.price,\n                    isValidPrice: isValidPrice(action.price)\n                }\n            };\n        }\n        case UPDATE_IMAGE: {\n            return {\n                ...state,\n                product: {\n                    ...state.product,\n                    image: action.image,\n                    isValidImage: isValidImageUrl(action.image)\n                }\n            };\n        }\n        case PUT_PRODUCT_TO_FORM: {\n            return {\n                ...state,\n                product: {\n                    ...action.product,\n                    isValidName: isValidName(action.product.name),\n                    isValidPrice: isValidPrice(action.product.price),\n                    isValidImage: isValidImageUrl(action.product.image)\n                }\n            };\n        }\n        case CLEAR_PRODUCT_FORM: {\n            return {\n                ...state,\n                product: { ...initialState.product }\n            };\n        }\n        default:\n            return state;\n    }\n}","import { MAX_DATE } from \"../../utils/constants/dates\";\nimport {\n    isValidDate,\n    isValidEmail,\n    isValidImageUrl,\n    isValidName,\n    isValidPassword,\n    isValidPhoneNumber\n} from \"../../utils/validation\";\nimport {\n    CHANGE_USER_BIRTHDAY,\n    CHANGE_USER_EMAIL,\n    CHANGE_USER_FIRST_NAME,\n    CHANGE_USER_ID,\n    CHANGE_USER_LAST_NAME,\n    CHANGE_USER_PASSWORD,\n    CHANGE_USER_PHONE_NUMBER,\n    CHANGE_USER_PHOTO,\n    CLEAR_USER_FORM,\n    PUT_USER_TO_FORM\n} from \"../../utils/constants/users\";\n\nconst initialState = {\n    user: {\n        id: \"\",\n        firstName: \"\",\n        isValidFirstName: false,\n        lastName: \"\",\n        isValidLastName: false,\n        birthday: MAX_DATE,\n        isValidBirthday: true,\n        email: \"\",\n        isValidEmail: false,\n        phoneNumber: \"\",\n        isValidPhoneNumber: false,\n        photo: \"\",\n        isValidPhoto: false,\n        password: \"\",\n        isValidPassword: false\n    }\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case CHANGE_USER_ID: {\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    id: action.id\n                }\n            };\n        }\n        case CHANGE_USER_FIRST_NAME: {\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    firstName: action.firstName,\n                    isValidFirstName: isValidName(action.firstName)\n                }\n            };\n        }\n        case CHANGE_USER_LAST_NAME: {\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    lastName: action.lastName,\n                    isValidLastName: isValidName(action.lastName)\n                }\n            };\n        }\n        case CHANGE_USER_BIRTHDAY: {\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    birthday: action.birthday,\n                    isValidBirthday: isValidDate(action.birthday)\n                }\n            };\n        }\n        case CHANGE_USER_PHONE_NUMBER: {\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    phoneNumber: action.phoneNumber,\n                    isValidPhoneNumber: isValidPhoneNumber(action.phoneNumber)\n                }\n            };\n        }\n        case CHANGE_USER_EMAIL: {\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    email: action.email,\n                    isValidEmail: isValidEmail(action.email)\n                }\n            };\n        }\n        case CHANGE_USER_PHOTO: {\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    photo: action.photo,\n                    isValidPhoto: isValidImageUrl(action.photo)\n                }\n            };\n        }\n        case CHANGE_USER_PASSWORD: {\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    password: action.password,\n                    isValidPassword: isValidPassword(action.password)\n                }\n            };\n        }\n        case PUT_USER_TO_FORM: {\n            const { firstName, lastName, birthday, email, phoneNumber, photo, password } = action.user;\n\n            return {\n                ...state,\n                user: {\n                    ...action.user,\n                    isValidFirstName: isValidName(firstName),\n                    isValidLastName: isValidName(lastName),\n                    isValidBirthday: isValidDate(birthday),\n                    isValidEmail: isValidEmail(email),\n                    isValidPhoneNumber: isValidPhoneNumber(phoneNumber),\n                    isValidPhoto: isValidImageUrl(photo),\n                    isValidPassword: isValidPassword(password)\n                }\n            };\n        }\n        case CLEAR_USER_FORM: {\n            return {\n                ...state,\n                user: { ...initialState.user }\n            };\n        }\n        default:\n            return state;\n    }\n}","import { isValidEmail, isValidPassword } from \"../../utils/validation\";\nimport { CHANGE_EMAIL_AT_LOGIN, CHANGE_PASSWORD_AT_LOGIN, CLEAR_SIGN_IN } from \"../../utils/constants/auth\";\n\nconst initialState = {\n    email: \"admin@gmail.com\",\n    password: \"00000000\",\n    isValidEmail: true,\n    isValidPassword: true\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case CHANGE_EMAIL_AT_LOGIN: {\n            return {\n                ...state,\n                email: action.email,\n                isValidEmail: isValidEmail(action.email)\n            };\n        }\n        case CHANGE_PASSWORD_AT_LOGIN: {\n            return {\n                ...state,\n                password: action.password,\n                isValidPassword: isValidPassword(action.password)\n            };\n        }\n        case CLEAR_SIGN_IN: {\n            return {\n                ...initialState\n            };\n        }\n        default:\n            return state;\n    }\n}","import { getFormattedDate } from \"../../utils/methods\";\nimport {\n    isValidDate,\n    isValidEmail,\n    isValidImageUrl,\n    isValidName,\n    isValidPassword,\n    isValidPhoneNumber\n} from \"../../utils/validation\";\nimport {\n    CHANGE_BIRTHDAY,\n    CHANGE_EMAIL,\n    CHANGE_FIRST_NAME,\n    CHANGE_LAST_NAME,\n    CHANGE_PASSWORD,\n    CHANGE_PHONE,\n    CHANGE_PHOTO,\n    CLEAR_SIGN_UP\n} from \"../../utils/constants/auth\";\nimport { MIN_DATE } from \"../../utils/constants/dates\";\n\nconst initialState = {\n    firstName: \"First Name\",\n    isValidFirstName: true,\n    lastName: \"Last Name\",\n    isValidLastName: true,\n    birthday: getFormattedDate(MIN_DATE),\n    isValidBirthday: true,\n    email: \"\",\n    isValidEmail: false,\n    phoneNumber: \"+380964502345\",\n    isValidPhoneNumber: true,\n    photo: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR_Sc4PFchrEZb4f1dO2qe5YacCM1PaSX7P23cWsOGXYwVF_D0KQEuG6pmPOlx6-4pk68U&usqp=CAU\",\n    isValidPhoto: true,\n    password: \"\",\n    isValidPassword: false\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case CHANGE_FIRST_NAME: {\n            return {\n                ...state,\n                firstName: action.firstName,\n                isValidFirstName: isValidName(action.firstName)\n            };\n        }\n        case CHANGE_LAST_NAME: {\n            return {\n                ...state,\n                lastName: action.lastName,\n                isValidLastName: isValidName(action.lastName)\n            };\n        }\n        case CHANGE_EMAIL: {\n            return {\n                ...state,\n                email: action.email,\n                isValidEmail: isValidEmail(action.email)\n            };\n        }\n        case CHANGE_PASSWORD: {\n            return {\n                ...state,\n                password: action.password,\n                isValidPassword: isValidPassword(action.password)\n            };\n        }\n        case CHANGE_BIRTHDAY: {\n            return {\n                ...state,\n                birthday: action.birthday,\n                isValidBirthday: isValidDate(action.birthday)\n            };\n        }\n        case CHANGE_PHONE: {\n            return {\n                ...state,\n                phoneNumber: action.phone,\n                isValidPhoneNumber: isValidPhoneNumber(action.phone)\n            };\n        }\n        case CHANGE_PHOTO: {\n            return {\n                ...state,\n                photo: action.photo,\n                isValidPhoto: isValidImageUrl(action.photo)\n            };\n        }\n        case CLEAR_SIGN_UP: {\n            return {\n                ...initialState\n            };\n        }\n        default:\n            return state;\n    }\n}","import { SET_CURRENT_USER } from \"../../utils/constants/users\";\n\nconst initialState = {\n    current: JSON.parse(sessionStorage.getItem(\"current\"))\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_CURRENT_USER: {\n            sessionStorage.setItem(\"current\", JSON.stringify(action.user));\n\n            return {\n                ...state,\n                current: action.user\n            };\n        }\n        default:\n            return state;\n    }\n}","import { SET_MESSAGE_INFO } from \"../../utils/constants/info\";\n\nconst initialState = { message: null };\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_MESSAGE_INFO: {\n            return {\n                ...state,\n                message: action.message\n            };\n        }\n        default:\n            return state;\n    }\n}","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport mainSaga from \"./saga\";\nimport users from \"./reducers/users\";\nimport products from \"./reducers/products\";\nimport productForm from \"./reducers/productForm\";\nimport userForm from \"./reducers/userForm\";\nimport signIn from \"./reducers/auth/signIn\";\nimport signUp from \"./reducers/auth/signUp\";\nimport profile from \"./reducers/profile\";\nimport messageInfo from \"./reducers/info\";\n\nconst reducers = {\n    signIn,\n    signUp,\n    products,\n    productForm,\n    users,\n    profile,\n    userForm,\n    messageInfo\n};\n\nconst rootReducer = combineReducers(reducers);\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(mainSaga);\n\nexport default store;","export const APP = \"/\";\nexport const BASE_PATH = \"/Products-front\";\nexport const BASE_PATH_WITH_TRAILING_SLASH = \"/Products-front/\";\nexport const SERVICE_WORKER_URL = BASE_PATH_WITH_TRAILING_SLASH + \"mockServiceWorker.js\";\n\nexport const SIGN_IN = \"/sign-in\";\nexport const SIGN_UP = \"/sign-up\";\n\nexport const PRODUCT_CART = \"/product/cart\";\nexport const PRODUCT_CARDS = \"/product/cards\";\nexport const PRODUCTS = \"/product/list\";\nexport const CREATE_PRODUCT_FORM = \"/product/add\";\nexport const PRODUCT_UPDATE = \"/product/update\";\n\nexport const USERS = \"/user/list\";\nexport const CREATE_USER_FORM = \"/user/add\";\nexport const USER_UPDATE = \"/user/update\";\nexport const USER_PROFILE = \"/profile\";\n\nexport const EMPTY_AVATAR = \"https://offvkontakte.ru/wp-content/uploads/avatarka-pustaya-vk_0.jpg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Menu, MenuItem } from \"@material-ui/core\";\nimport { SIGN_IN, USER_PROFILE } from \"../../utils/links/front\";\n\nconst MenuComponent = ({ anchorEl, setAnchorEl, onLogOut }) => {\n    const open = Boolean(anchorEl);\n    const handleClose = () => setAnchorEl(null);\n\n    return (\n        <Menu anchorEl={anchorEl} open={open} onClose={handleClose}>\n            <MenuItem>\n                <Button component={Link} to={USER_PROFILE} onClick={handleClose}>\n                    Profile\n                </Button>\n            </MenuItem>\n\n            <MenuItem>\n                <Button component={Link} to={SIGN_IN} onClick={onLogOut}>\n                    Log Out\n                </Button>\n            </MenuItem>\n        </Menu>\n    );\n};\n\nMenuComponent.propTypes = {\n    anchorEl: PropTypes.object,\n    setAnchorEl: PropTypes.func.isRequired,\n    onLogOut: PropTypes.func.isRequired\n};\n\nexport default MenuComponent;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AppBar, Avatar, IconButton, Toolbar, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuComponent from \"./MenuComponent\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        zIndex: theme.zIndex.drawer + 1\n    },\n    title: {\n        flexGrow: 1\n    }\n}));\n\nconst AppBarComponent = ({ photo, onLogOut }) => {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const handleMenu = (event) => setAnchorEl(event.currentTarget);\n\n    return (\n        <AppBar className={classes.root} position={\"fixed\"}>\n            <Toolbar>\n                <Typography className={classes.title} variant={\"h5\"}>\n                    Products\n                </Typography>\n\n                <IconButton onClick={handleMenu}>\n                    <Avatar src={photo}/>\n                </IconButton>\n\n                <MenuComponent\n                    anchorEl={anchorEl}\n                    setAnchorEl={setAnchorEl}\n                    onLogOut={onLogOut}\n                />\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nAppBarComponent.propTypes = {\n    photo: PropTypes.string.isRequired,\n    onLogOut: PropTypes.func.isRequired\n};\n\nexport default AppBarComponent;","import React from \"react\";\nimport { Lock, People, ShoppingCart, ViewModule } from \"@material-ui/icons\";\nimport { PRODUCT_CARDS, PRODUCT_CART, PRODUCTS, USERS } from \"../../utils/links/front\";\n\nexport const MenuElements = [\n    {\n        linkTo: PRODUCTS,\n        Icon: () => <Lock/>,\n        name: \"Products\"\n    },\n    {\n        linkTo: PRODUCT_CARDS,\n        Icon: () => <ViewModule/>,\n        name: \"Product Cards\"\n    },\n    {\n        linkTo: PRODUCT_CART,\n        Icon: () => <ShoppingCart/>,\n        name: \"Cart\"\n    },\n    {\n        linkTo: USERS,\n        Icon: () => <People/>,\n        name: \"Users\"\n    }\n];","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Badge, Button, ListItem, ListItemIcon, ListItemText, Typography } from \"@material-ui/core\";\nimport { PRODUCT_CART } from \"../../utils/links/front\";\n\nconst MenuElement = ({ linkTo, Icon, name, countProductsInCart }) => (\n    <Button fullWidth to={linkTo} component={Link}>\n        <ListItem>\n            <ListItemIcon>\n                {\n                    linkTo === PRODUCT_CART ? (\n                        <Badge badgeContent={countProductsInCart} color={\"secondary\"}>\n                            <Icon/>\n                        </Badge>\n                    ) : <Icon/>\n                }\n            </ListItemIcon>\n\n            <ListItemText primary={\n                <Typography variant={\"subtitle2\"}>\n                    {name}\n                </Typography>\n            }/>\n        </ListItem>\n    </Button>\n);\n\nMenuElement.propTypes = {\n    linkTo: PropTypes.string.isRequired,\n    Icon: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    countProductsInCart: PropTypes.number.isRequired\n};\n\nexport default MenuElement;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { MenuElements } from \"./MenuElements\";\nimport MenuElement from \"./MenuElement\";\n\nconst useStyles = makeStyles({\n    list: {\n        color: \"#64d1ff\"\n    }\n});\n\nconst NavigationMenu = ({ menuElements, countProductsInCart }) => {\n    const classes = useStyles();\n\n    return (\n        <List className={classes.list}>\n            {\n                menuElements.map(({ linkTo, Icon, name }) => (\n                    <MenuElement\n                        key={linkTo}\n                        linkTo={linkTo}\n                        Icon={Icon}\n                        name={name}\n                        countProductsInCart={countProductsInCart}\n                    />\n                ))\n            }\n        </List>\n    );\n};\n\nNavigationMenu.defaultProps = {\n    menuElements: MenuElements\n};\n\nNavigationMenu.propTypes = {\n    countProductsInCart: PropTypes.number.isRequired\n};\n\nexport default NavigationMenu;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Drawer } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NavigationMenu from \"./NavigationMenu\";\n\nconst useStyles = makeStyles((theme) => ({\n    toolbar: theme.mixins.toolbar,\n    drawer: {\n        width: 250,\n        flexShrink: 0\n    },\n    drawerPaper: {\n        width: 250,\n        backgroundColor: \"rgba(40,106,153,0.02)\"\n    }\n}));\n\nconst DrawerComponent = ({ countProductsInCart }) => {\n    const classes = useStyles();\n\n    return (\n        <Drawer\n            className={classes.drawer}\n            classes={{ paper: classes.drawerPaper }}\n            variant={\"permanent\"}\n            open={true}\n        >\n            <div className={classes.toolbar}/>\n            <NavigationMenu countProductsInCart={countProductsInCart}/>\n        </Drawer>\n    );\n};\n\nDrawerComponent.propTypes = {\n    countOfProductsInCart: PropTypes.number\n};\n\nexport default DrawerComponent;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Avatar, IconButton, ListItemAvatar, ListItemText, TableCell, TableRow } from \"@material-ui/core\";\nimport { Add, Remove } from \"@material-ui/icons\";\nimport { getCountOfItemsWithId, getFloatingPointAmount } from \"../../utils/methods\";\n\nconst ProductCartItem = ({ style, product, products, onAddProduct, onRemoveProduct }) => {\n    const { id, name, image, price } = product;\n\n    return (\n        <TableRow key={id}>\n            <TableCell className={style}>\n                <ListItemAvatar>\n                    <Avatar src={image}/>\n                </ListItemAvatar>\n            </TableCell>\n\n            <TableCell align={\"left\"}>\n                <ListItemText primary={name}/>\n            </TableCell>\n\n            <TableCell align={\"right\"}>\n                <IconButton onClick={() => onRemoveProduct(product)}>\n                    <Remove/>\n                </IconButton>\n            </TableCell>\n\n            <TableCell align={\"center\"}>\n                <ListItemText primary={getCountOfItemsWithId(products, id)}/>\n            </TableCell>\n\n            <TableCell align={\"left\"}>\n                <IconButton onClick={() => onAddProduct(product)}>\n                    <Add/>\n                </IconButton>\n            </TableCell>\n\n            <TableCell className={style}>\n                <ListItemText primary={getFloatingPointAmount(price)}/>\n            </TableCell>\n        </TableRow>\n    );\n};\n\nProductCartItem.propTypes = {\n    style: PropTypes.string.isRequired,\n    product: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        price: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n        image: PropTypes.string.isRequired\n    }).isRequired,\n    products: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            price: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n            image: PropTypes.string.isRequired\n        }).isRequired\n    ).isRequired,\n    onAddProduct: PropTypes.func.isRequired,\n    onRemoveProduct: PropTypes.func.isRequired\n};\n\nexport default ProductCartItem;","import React from \"react\";\nimport key from \"weak-key\";\nimport PropTypes from \"prop-types\";\nimport { Box, Container, Table, TableBody, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ProductCartItem from \"./ProductCartItem\";\nimport { getFloatingPointAmount } from \"../../utils/methods\";\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650\n    },\n    cell: {\n        width: \"50px\"\n    }\n});\n\nconst ProductCart = ({ products, onAddProduct, onRemoveProduct }) => {\n    const classes = useStyles();\n    let totalSum = products.reduce((a, { price }) => a + parseFloat(price), 0);\n\n    return (\n        <Container maxWidth={\"lg\"} style={{ marginTop: 100 }}>\n            <Table className={classes.table}>\n                <TableBody>\n                    {\n                        products\n                            .filter((item, index, arr) => arr.indexOf(item) === index)\n                            .map((item) => (\n                                    <ProductCartItem\n                                        key={key(item)}\n                                        style={classes.cell}\n                                        product={item}\n                                        products={products}\n                                        onAddProduct={onAddProduct}\n                                        onRemoveProduct={onRemoveProduct}\n                                    />\n                                )\n                            )\n                    }\n                </TableBody>\n            </Table>\n\n            <Box display={\"flex\"} mt={6} flexDirection={\"row-reverse\"}>\n                <Typography variant={\"h4\"}>\n                    Total sum: {getFloatingPointAmount(totalSum)}\n                </Typography>\n            </Box>\n        </Container>\n    );\n};\n\nProductCart.propTypes = {\n    products: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            price: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n            image: PropTypes.string.isRequired\n        }).isRequired\n    ).isRequired,\n    onAddProduct: PropTypes.func.isRequired,\n    onRemoveProduct: PropTypes.func.isRequired\n};\n\nexport default ProductCart;","import { connect } from \"react-redux\";\nimport ProductCart from \"../../components/products/ProductCart\";\nimport { addProductToCart, removeProductFromCart } from \"../../actions/products\";\n\nconst mapStateToProps = (state) => ({\n    products: state.products.productsInCart\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddProduct: (product) => dispatch(addProductToCart(product)),\n        onRemoveProduct: (product) => dispatch(removeProductFromCart(product))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCart);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"@material-ui/core/Card\";\nimport { Box, CardContent, CardMedia, Divider, IconButton, Typography } from \"@material-ui/core\";\nimport { AddShoppingCart } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getFloatingPointAmount } from \"../../utils/methods\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        maxWidth: 250,\n        maxHeight: 290,\n        \"&:hover\": {\n            border: \"1px solid #8aabf2\"\n        }\n    },\n    media: {\n        paddingTop: \"70%\"\n    },\n    content: {\n        textAlign: \"left\",\n        paddingLeft: 15\n    },\n    divider: {\n        margin: \"2%\",\n        backgroundColor: theme.palette.error.light\n    }\n}));\n\nconst ProductCard = ({ product, onAddProduct }) => {\n    const classes = useStyles();\n    const { name, price, image } = product;\n\n    return (\n        <Card className={classes.card}>\n            <CardMedia\n                className={classes.media}\n                image={image}\n            />\n\n            <CardContent>\n                <Typography\n                    className={classes.content}\n                    variant={\"h6\"}\n                    gutterBottom\n                >\n                    {name}\n                </Typography>\n\n                <Divider className={classes.divider}/>\n\n                <Box display={\"flex\"} alignItems={\"center\"}>\n                    <Box flexGrow={1}>\n                        <Typography\n                            className={classes.content}\n                            variant={\"h5\"}\n                            color={\"error\"}\n                        >\n                            {getFloatingPointAmount(price)}\n                        </Typography>\n                    </Box>\n\n                    <Box>\n                        <IconButton onClick={onAddProduct}>\n                            <AddShoppingCart/>\n                        </IconButton>\n                    </Box>\n                </Box>\n            </CardContent>\n        </Card>\n    );\n};\n\nProductCard.propTypes = {\n    product: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        price: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n        image: PropTypes.string.isRequired\n    }).isRequired,\n    onAddProduct: PropTypes.func.isRequired\n};\n\nexport default ProductCard;","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Grid, Toolbar } from \"@material-ui/core\";\nimport ProductCard from \"./ProductCard\";\n\nconst ProductCards = ({ products, fetchProducts, onAddProduct }) => {\n    useEffect(() => {\n        fetchProducts();\n    }, [fetchProducts]);\n\n    return (\n        <Container maxWidth={\"lg\"}>\n            <Toolbar/>\n\n            <Grid container spacing={8}>\n                {\n                    products.map((item) => (\n                        <Grid key={item.id} item sm={3}>\n                            <ProductCard\n                                product={item}\n                                onAddProduct={() => onAddProduct(item)}\n                            />\n                        </Grid>\n                    ))\n                }\n            </Grid>\n        </Container>\n    );\n};\n\nProductCards.propTypes = {\n    products: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            price: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n            image: PropTypes.string.isRequired\n        }).isRequired\n    ).isRequired,\n    fetchProducts: PropTypes.func.isRequired,\n    onAddProduct: PropTypes.func.isRequired\n};\n\nexport default ProductCards;","import { connect } from \"react-redux\";\nimport ProductCards from \"../../components/products/ProductCards\";\nimport { addProductToCart } from \"../../actions/products\";\nimport { getProductsSaga } from \"../../actions/productsSaga\";\n\nconst mapStateToProps = (state) => ({\n    products: state.products.products\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchProducts: () => dispatch(getProductsSaga()),\n    onAddProduct: (product) => dispatch(addProductToCart(product))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCards);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { InputBase } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport { alpha, makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    search: {\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\n        width: 400,\n        height: 42.25,\n        float: \"right\"\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    inputRoot: {\n        color: \"inherit\"\n    },\n    inputInput: {\n        padding: theme.spacing(1.5, 1, 1, 7),\n        transition: theme.transitions.create(\"width\"),\n        width: 340\n    }\n}));\n\nconst SearchLine = ({ filteredName, onChangeFilteredName }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.search}>\n            <div className={classes.searchIcon}>\n                <Search/>\n            </div>\n            <InputBase\n                placeholder={\"Search…\"}\n                value={filteredName}\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput\n                }}\n                onChange={(e) => onChangeFilteredName(e.target.value)}\n            />\n        </div>\n    );\n};\n\nSearchLine.propTypes = {\n    filteredName: PropTypes.string.isRequired,\n    onChangeFilteredName: PropTypes.func.isRequired\n};\n\nexport default SearchLine;","import React from \"react\";\nimport key from \"weak-key\";\nimport PropTypes from \"prop-types\";\nimport { Table, TableBody, TableCell, TableHead, TableRow } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        fontSize: 16,\n        fontWeight: \"bold\",\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white\n    },\n    body: {\n        fontSize: 2\n    }\n}))(TableCell);\n\nconst UniversalTable = ({ columns, data }) => (\n    <Table size={\"small\"}>\n        <TableHead>\n            <TableRow>\n                {\n                    columns.map(({ label }) => (\n                        <StyledTableCell key={key({ label })} align={\"center\"}>{label}</StyledTableCell>\n                    ))\n                }\n            </TableRow>\n        </TableHead>\n\n        <TableBody>\n            {\n                data.map((item) => (\n                    <TableRow key={key(item)}>\n                        {\n                            columns.map(({ label, field, render }) => (\n                                <TableCell key={key({ label })} align={\"center\"}>\n                                    {render ? render(item) : item[field]}\n                                </TableCell>\n                            ))\n                        }\n                    </TableRow>\n                ))\n            }\n        </TableBody>\n    </Table>\n);\n\nUniversalTable.propTypes = {\n    columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n    data: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default UniversalTable;","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Container, IconButton, Paper, TableContainer, Toolbar } from \"@material-ui/core\";\nimport { Add, Delete, Update } from \"@material-ui/icons\";\nimport SearchLine from \"../SearchLine\";\nimport UniversalTable from \"../table\";\nimport { CREATE_PRODUCT_FORM, PRODUCT_UPDATE } from \"../../utils/links/front\";\n\nconst Products = ({\n                      products, filteredName, fetchProducts,\n                      onChangeFilteredName, onCreate, onDelete, putProductToForm\n                  }) => {\n    useEffect(() => {\n        fetchProducts();\n    }, [fetchProducts]);\n\n    const productColumns = [\n        {\n            label: \"ID\",\n            field: \"id\"\n        },\n        {\n            label: \"Name\",\n            field: \"name\"\n        },\n        {\n            label: \"Price\",\n            field: \"price\"\n        },\n        {\n            label: \"Update\",\n            render: (product) => (\n                <Link to={PRODUCT_UPDATE}>\n                    <IconButton onClick={() => putProductToForm(product)}>\n                        <Update/>\n                    </IconButton>\n                </Link>\n            )\n        },\n        {\n            label: \"Delete\",\n            render: ({ id }) => (\n                <IconButton onClick={() => onDelete(id)}>\n                    <Delete/>\n                </IconButton>\n            )\n        }\n    ];\n\n    return (\n        <Container>\n            <Toolbar/>\n\n            <Link to={CREATE_PRODUCT_FORM}>\n                <Button\n                    size={\"large\"}\n                    color={\"primary\"}\n                    variant={\"contained\"}\n                    startIcon={<Add/>}\n                    onClick={() => onCreate()}\n                >\n                    Add new product\n                </Button>\n            </Link>\n\n            <SearchLine\n                filteredName={filteredName}\n                onChangeFilteredName={onChangeFilteredName}\n            />\n\n            <Toolbar/>\n\n            <TableContainer component={Paper}>\n                <UniversalTable columns={productColumns} data={products}/>\n            </TableContainer>\n        </Container>\n    );\n};\n\nProducts.propTypes = {\n    products: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            price: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n            image: PropTypes.string.isRequired\n        }).isRequired\n    ).isRequired,\n    filteredName: PropTypes.string.isRequired,\n    fetchProducts: PropTypes.func.isRequired,\n    onChangeFilteredName: PropTypes.func.isRequired,\n    onCreate: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    putProductToForm: PropTypes.func.isRequired\n};\n\nexport default Products;","import { connect } from \"react-redux\";\nimport Products from \"../../components/products\";\nimport { changeFilteredName } from \"../../actions/products\";\nimport { clearProductForm, putProductToForm } from \"../../actions/productForm\";\nimport { getProductsByFilteredNameSaga, getProductsSaga, removeProduct } from \"../../actions/productsSaga\";\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.products.products,\n        filteredName: state.products.filteredName\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchProducts: () => dispatch(getProductsSaga()),\n        putProductToForm: (product) => dispatch(putProductToForm(product)),\n        onCreate: () => dispatch(clearProductForm()),\n        onDelete: (id) => dispatch(removeProduct(id)),\n        onChangeFilteredName: (filteredName) => {\n            dispatch(changeFilteredName(filteredName));\n            dispatch(getProductsByFilteredNameSaga(filteredName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Avatar, Container, IconButton, Paper, TableContainer, Toolbar } from \"@material-ui/core\";\nimport { Delete, Update } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SearchLine from \"../SearchLine\";\nimport UniversalTable from \"../table\";\nimport { USER_UPDATE } from \"../../utils/links/front\";\n\nconst useStyles = makeStyles({\n    div: {\n        contain: \"content\"\n    }\n});\n\nconst Users = ({ current, users, filteredName, fetchUsers, putUserToForm, onDelete, onChangeFilteredName }) => {\n    const classes = useStyles();\n\n    useEffect(() => {\n        fetchUsers();\n    }, [fetchUsers]);\n\n    const userColumns = [\n        {\n            label: \"Photo\",\n            field: \"photo\",\n            render: ({ photo }) => (<Avatar src={photo}/>)\n        },\n        {\n            label: \"ID\",\n            field: \"id\"\n        },\n        {\n            label: \"First Name\",\n            field: \"firstName\"\n        },\n        {\n            label: \"Last Name\",\n            field: \"lastName\"\n        },\n        {\n            label: \"Birthday\",\n            field: \"birthday\"\n        },\n        {\n            label: \"Phone\",\n            field: \"phoneNumber\"\n        },\n        {\n            label: \"Email\",\n            field: \"email\"\n        },\n        {\n            label: \"Update\",\n            render: (user) => (\n                <Link to={USER_UPDATE}>\n                    <IconButton onClick={() => putUserToForm(user)}>\n                        <Update/>\n                    </IconButton>\n                </Link>\n            )\n        },\n        {\n            label: \"Delete\",\n            render: ({ id }) => (\n                <IconButton\n                    disabled={id === current.id}\n                    onClick={() => onDelete(id)}\n                >\n                    <Delete/>\n                </IconButton>\n            )\n        }\n    ];\n\n    return (\n        <Container>\n            <Toolbar/>\n\n            <div className={classes.div}>\n                <SearchLine\n                    filteredName={filteredName}\n                    onChangeFilteredName={onChangeFilteredName}\n                />\n            </div>\n\n            <Toolbar/>\n\n            <TableContainer component={Paper}>\n                <UniversalTable columns={userColumns} data={users}/>\n            </TableContainer>\n        </Container>\n    );\n};\n\nUsers.propTypes = {\n    current: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        firstName: PropTypes.string.isRequired,\n        lastName: PropTypes.string.isRequired,\n        birthday: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired,\n        phoneNumber: PropTypes.string.isRequired,\n        photo: PropTypes.string.isRequired,\n        password: PropTypes.string.isRequired\n    }).isRequired,\n    users: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            firstName: PropTypes.string.isRequired,\n            lastName: PropTypes.string.isRequired,\n            birthday: PropTypes.string.isRequired,\n            email: PropTypes.string.isRequired,\n            phoneNumber: PropTypes.string.isRequired,\n            photo: PropTypes.string.isRequired,\n            password: PropTypes.string.isRequired\n        }).isRequired\n    ).isRequired,\n    filteredName: PropTypes.string.isRequired,\n    fetchUsers: PropTypes.func.isRequired,\n    putUserToForm: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onChangeFilteredName: PropTypes.func.isRequired\n};\n\nexport default Users;","import { connect } from \"react-redux\";\nimport Users from \"../../components/users\";\nimport { putUserToForm } from \"../../actions/userForm\";\nimport { changeFilteredUsername } from \"../../actions/users\";\nimport { getUsersByFilteredNameSaga, getUsersSaga, removeUser } from \"../../actions/usersSaga\";\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.users.users,\n        filteredName: state.users.filteredName,\n        current: state.profile.current\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchUsers: () => dispatch(getUsersSaga()),\n        putUserToForm: (user) => dispatch(putUserToForm(user)),\n        onDelete: (id) => dispatch(removeUser(id)),\n        onChangeFilteredName: (filteredName) => {\n            dispatch(changeFilteredUsername(filteredName));\n            dispatch(getUsersByFilteredNameSaga());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid, TextField } from \"@material-ui/core\";\n\nconst TextFieldComponent = ({ label, type = \"text\", value, disabled = false, isValidData, onChangeData }) => (\n    <Grid item xs={12}>\n        <TextField\n            fullWidth\n            required\n            size={\"medium\"}\n            variant={\"outlined\"}\n            label={label}\n            type={type}\n            value={value}\n            disabled={disabled}\n            error={!isValidData}\n            onChange={(e) => onChangeData(e.target.value)}\n        />\n    </Grid>\n);\n\nTextFieldComponent.propTypes = {\n    label: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n    disabled: PropTypes.bool,\n    isValidData: PropTypes.bool.isRequired,\n    onChangeData: PropTypes.func.isRequired\n};\n\nexport default TextFieldComponent;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { Save, Update } from \"@material-ui/icons\";\n\nconst ButtonSaveUpdate = ({ id, linkTo, isDisabledButtonSave, onSave }) => (\n    <Grid item xs={12}>\n        <Link to={linkTo}>\n            <Button\n                fullWidth\n                size={\"large\"}\n                color={\"primary\"}\n                variant={\"contained\"}\n                disabled={isDisabledButtonSave()}\n                startIcon={id ? <Update/> : <Save/>}\n                onClick={onSave}\n            >\n                {id ? \"UPDATE\" : \"SAVE\"}\n            </Button>\n        </Link>\n    </Grid>\n);\n\nButtonSaveUpdate.propTypes = {\n    id: PropTypes.string.isRequired,\n    linkTo: PropTypes.string.isRequired,\n    isDisabledButtonSave: PropTypes.func.isRequired,\n    onSave: PropTypes.func.isRequired\n};\n\nexport default ButtonSaveUpdate;","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { getFormattedDate } from \"../../utils/methods\";\nimport { MAX_DATE, MIN_DATE } from \"../../utils/constants/dates\";\n\nconst Birthday = ({ birthday, isValidBirthday, onChangeBirthday }) => {\n    const [dateOpen, setDateOpen] = useState(false);\n\n    return (\n        <KeyboardDatePicker\n            label={\"Birthday\"}\n            format={\"yyyy-MM-dd\"}\n            inputVariant={\"outlined\"}\n            required\n            fullWidth\n            value={new Date(birthday)}\n            minDate={MIN_DATE}\n            maxDate={MAX_DATE}\n            error={!isValidBirthday}\n            animateYearScrolling={true}\n            open={dateOpen}\n            onClose={() => setDateOpen(false)}\n            onClick={() => setDateOpen(!dateOpen)}\n            onChange={(e) => onChangeBirthday(getFormattedDate(e))}\n        />\n    );\n};\n\nBirthday.propTypes = {\n    birthday: PropTypes.string.isRequired,\n    isValidBirthday: PropTypes.bool.isRequired,\n    onChangeBirthday: PropTypes.func.isRequired\n};\n\nexport default Birthday;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Grid, Toolbar } from \"@material-ui/core\";\nimport TextFieldComponent from \"../TextFieldComponent\";\nimport ButtonSaveUpdate from \"../ButtonSaveUpdate\";\nimport Birthday from \"../auth/Birthday\";\nimport { USERS } from \"../../utils/links/front\";\n\nconst UserForm = ({\n                      id, onChangeId,\n                      firstName, isValidFirstName, onChangeFirstName,\n                      lastName, isValidLastName, onChangeLastName,\n                      birthday, isValidBirthday, onChangeBirthday,\n                      email, isValidEmail, onChangeEmail,\n                      phoneNumber, isValidPhoneNumber, onChangePhoneNumber,\n                      photo, isValidPhoto, onChangePhoto,\n                      password, isValidPassword, onChangePassword,\n                      onSave\n                  }) => {\n    const isDisabledButtonSave = () => !(\n        isValidFirstName &&\n        isValidLastName &&\n        isValidEmail &&\n        isValidPhoneNumber &&\n        isValidPhoto &&\n        isValidPassword\n    );\n\n    return (\n        <Container>\n            <Toolbar/>\n\n            <Grid item container justifyContent={\"center\"} alignItems={\"center\"} spacing={4} xs={10}>\n                <TextFieldComponent\n                    label={\"ID\"}\n                    value={id}\n                    disabled={true}\n                    isValidData={true}\n                    onChangeData={onChangeId}\n                />\n\n                <TextFieldComponent\n                    label={\"First Name\"}\n                    value={firstName}\n                    isValidData={isValidFirstName}\n                    onChangeData={onChangeFirstName}\n                />\n\n                <TextFieldComponent\n                    label={\"Last Name\"}\n                    value={lastName}\n                    isValidData={isValidLastName}\n                    onChangeData={onChangeLastName}\n                />\n\n                <Grid item xs={12}>\n                    <Birthday\n                        birthday={birthday}\n                        isValidBirthday={isValidBirthday}\n                        onChangeBirthday={onChangeBirthday}\n                    />\n                </Grid>\n\n                <TextFieldComponent\n                    label={\"Phone Number\"}\n                    value={phoneNumber}\n                    isValidData={isValidPhoneNumber}\n                    onChangeData={onChangePhoneNumber}\n                />\n\n                <TextFieldComponent\n                    label={\"Email\"}\n                    value={email}\n                    isValidData={isValidEmail}\n                    onChangeData={onChangeEmail}\n                />\n\n                <TextFieldComponent\n                    label={\"Photo URL\"}\n                    value={photo}\n                    isValidData={isValidPhoto}\n                    onChangeData={onChangePhoto}\n                />\n\n                <TextFieldComponent\n                    label={\"Password\"}\n                    type={\"password\"}\n                    value={password}\n                    isValidData={isValidPassword}\n                    onChangeData={onChangePassword}\n                />\n\n                <ButtonSaveUpdate\n                    id={id}\n                    linkTo={USERS}\n                    isDisabledButtonSave={isDisabledButtonSave}\n                    onSave={() => onSave({ id, firstName, lastName, phoneNumber, email, photo, password })}\n                />\n            </Grid>\n        </Container>\n    );\n};\n\nUserForm.propTypes = {\n    id: PropTypes.string.isRequired,\n    onChangeId: PropTypes.func.isRequired,\n    firstName: PropTypes.string.isRequired,\n    isValidFirstName: PropTypes.bool.isRequired,\n    onChangeFirstName: PropTypes.func.isRequired,\n    lastName: PropTypes.string.isRequired,\n    isValidLastName: PropTypes.bool.isRequired,\n    onChangeLastName: PropTypes.func.isRequired,\n    birthday: PropTypes.string.isRequired,\n    isValidBirthday: PropTypes.bool.isRequired,\n    onChangeBirthday: PropTypes.func.isRequired,\n    email: PropTypes.string.isRequired,\n    isValidEmail: PropTypes.bool.isRequired,\n    onChangeEmail: PropTypes.func.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n    isValidPhoneNumber: PropTypes.bool.isRequired,\n    onChangePhoneNumber: PropTypes.func.isRequired,\n    photo: PropTypes.string.isRequired,\n    isValidPhoto: PropTypes.bool.isRequired,\n    onChangePhoto: PropTypes.func.isRequired,\n    password: PropTypes.string.isRequired,\n    isValidPassword: PropTypes.bool.isRequired,\n    onChangePassword: PropTypes.func.isRequired,\n    onSave: PropTypes.func.isRequired\n};\n\nexport default UserForm;","import { connect } from \"react-redux\";\nimport UserForm from \"../../components/userForm\";\nimport { saveUser } from \"../../actions/usersSaga\";\nimport {\n    changeBirthday,\n    changeEmail,\n    changeFirstName,\n    changeId,\n    changeLastName,\n    changePassword,\n    changePhoneNumber,\n    changePhoto\n} from \"../../actions/userForm\";\n\nconst mapStateToProps = (state) => {\n    return {\n        id: state.userForm.user.id,\n        firstName: state.userForm.user.firstName,\n        isValidFirstName: state.userForm.user.isValidFirstName,\n        lastName: state.userForm.user.lastName,\n        isValidLastName: state.userForm.user.isValidLastName,\n        birthday: state.userForm.user.birthday,\n        isValidBirthday: state.userForm.user.isValidBirthday,\n        email: state.userForm.user.email,\n        isValidEmail: state.userForm.user.isValidEmail,\n        phoneNumber: state.userForm.user.phoneNumber,\n        isValidPhoneNumber: state.userForm.user.isValidPhoneNumber,\n        photo: state.userForm.user.photo,\n        isValidPhoto: state.userForm.user.isValidPhoto,\n        password: state.userForm.user.password,\n        isValidPassword: state.userForm.user.isValidPassword\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onChangeId: (id) => dispatch(changeId(id)),\n        onChangeFirstName: (firstName) => dispatch(changeFirstName(firstName)),\n        onChangeLastName: (lastName) => dispatch(changeLastName(lastName)),\n        onChangeBirthday: (birthday) => dispatch(changeBirthday(birthday)),\n        onChangePhoneNumber: (phoneNumber) => dispatch(changePhoneNumber(phoneNumber)),\n        onChangeEmail: (email) => dispatch(changeEmail(email)),\n        onChangePhoto: (photo) => dispatch(changePhoto(photo)),\n        onChangePassword: (password) => dispatch(changePassword(password)),\n        onSave: (user) => dispatch(saveUser(user))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserForm);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Grid, Toolbar, Typography } from \"@material-ui/core\";\nimport TextFieldComponent from \"../TextFieldComponent\";\nimport ButtonSaveUpdate from \"../ButtonSaveUpdate\";\nimport { PRODUCTS } from \"../../utils/links/front\";\n\nconst ProductForm = ({\n                         id, name, isValidName, price, isValidPrice, image, isValidImage,\n                         onChangeId, onChangeName, onChangePrice, onChangeImage, onSave\n                     }) => {\n    const isDisabledButtonSave = () => !(isValidName && isValidPrice && isValidImage);\n\n    return (\n        <Container>\n            <Toolbar/>\n\n            <Grid item container justifyContent={\"center\"} alignItems={\"center\"} spacing={4} xs={10}>\n                <Grid item xs={12}>\n                    <Typography variant={\"h2\"}>\n                        Create a product\n                    </Typography>\n                </Grid>\n\n                {\n                    id && (\n                        <TextFieldComponent\n                            label={\"ID\"}\n                            value={id}\n                            disabled={true}\n                            isValidData={true}\n                            onChangeData={onChangeId}\n                        />\n                    )\n                }\n\n                <TextFieldComponent\n                    label={\"Name\"}\n                    value={name}\n                    isValidData={isValidName}\n                    onChangeData={onChangeName}\n                />\n\n                <TextFieldComponent\n                    label={\"Price\"}\n                    type={\"number\"}\n                    value={price}\n                    isValidData={isValidPrice}\n                    onChangeData={onChangePrice}\n                />\n\n                <TextFieldComponent\n                    label={\"Image URL\"}\n                    value={image}\n                    isValidData={isValidImage}\n                    onChangeData={onChangeImage}\n                />\n\n                <ButtonSaveUpdate\n                    id={id}\n                    linkTo={PRODUCTS}\n                    isDisabledButtonSave={isDisabledButtonSave}\n                    onSave={() => onSave({ id, name, price, image })}\n                />\n            </Grid>\n        </Container>\n    );\n};\n\nProductForm.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isValidName: PropTypes.bool.isRequired,\n    price: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n    isValidPrice: PropTypes.bool.isRequired,\n    image: PropTypes.string.isRequired,\n    isValidImage: PropTypes.bool.isRequired,\n    onChangeId: PropTypes.func.isRequired,\n    onChangeName: PropTypes.func.isRequired,\n    onChangePrice: PropTypes.func.isRequired,\n    onChangeImage: PropTypes.func.isRequired,\n    onSave: PropTypes.func.isRequired\n};\n\nexport default ProductForm;","import { connect } from \"react-redux\";\nimport ProductForm from \"../../components/productForm\";\nimport { saveProduct } from \"../../actions/productsSaga\";\nimport { updateId, updateImage, updateName, updatePrice } from \"../../actions/productForm\";\n\nconst mapStateToProps = (state) => {\n    return {\n        id: state.productForm.product.id,\n        name: state.productForm.product.name,\n        isValidName: state.productForm.product.isValidName,\n        price: state.productForm.product.price,\n        isValidPrice: state.productForm.product.isValidPrice,\n        image: state.productForm.product.image,\n        isValidImage: state.productForm.product.isValidImage\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onChangeId: (id) => dispatch(updateId(id)),\n        onChangeName: (name) => dispatch(updateName(name)),\n        onChangePrice: (price) => dispatch(updatePrice(price)),\n        onChangeImage: (image) => dispatch(updateImage(image)),\n        onSave: (product) => dispatch(saveProduct(product))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductForm);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardMedia, Container, Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getFormattedDate } from \"../../utils/methods\";\nimport { EMPTY_AVATAR } from \"../../utils/links/front\";\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: 100\n    },\n    media: {\n        paddingTop: \"70%\"\n    }\n});\n\nconst Profile = ({ firstName, lastName, birthday, phoneNumber, email, photo }) => {\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.root}>\n            <Grid container spacing={10}>\n                <Grid item xs={5}>\n                    <CardMedia\n                        className={classes.media}\n                        image={photo ? photo : EMPTY_AVATAR}\n                    />\n                </Grid>\n\n                <Grid item container xs={7} spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography\n                            variant={\"h1\"}\n                            color={\"primary\"}\n                        >\n                            {firstName}\n                        </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Typography\n                            variant={\"h1\"}\n                            color={\"primary\"}\n                        >\n                            {lastName}\n                        </Typography>\n                    </Grid>\n                </Grid>\n\n                <Grid container style={{ marginLeft: 50 }}>\n                    <Grid container spacing={5} style={{ marginTop: 5 }}>\n                        <Grid item xs={12} sm={5}>\n                            <Typography\n                                variant={\"h4\"}\n                                color={\"inherit\"}\n                            >\n                                Birthday:\n                            </Typography>\n                        </Grid>\n\n                        <Grid item xs={12} sm={5}>\n                            <Typography\n                                variant={\"h4\"}\n                                color={\"secondary\"}\n                            >\n                                {getFormattedDate(birthday)}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n\n                    <Grid container spacing={5} style={{ marginTop: 5 }}>\n                        <Grid item xs={12} sm={5}>\n                            <Typography\n                                variant={\"h4\"}\n                                color={\"inherit\"}\n                            >\n                                Phone:\n                            </Typography>\n                        </Grid>\n\n                        <Grid item xs={12} sm={5}>\n                            <Typography\n                                variant={\"h4\"}\n                                color={\"secondary\"}\n                            >\n                                {phoneNumber}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n\n                    <Grid container spacing={5} style={{ marginTop: 5 }}>\n                        <Grid item xs={12} sm={5}>\n                            <Typography\n                                variant={\"h4\"}\n                                color={\"inherit\"}\n                            >\n                                Email:\n                            </Typography>\n                        </Grid>\n\n                        <Grid item xs={12} sm={5}>\n                            <Typography\n                                variant={\"h4\"}\n                                color={\"secondary\"}\n                            >\n                                {email}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\n\nProfile.propTypes = {\n    firstName: PropTypes.string.isRequired,\n    lastName: PropTypes.string.isRequired,\n    birthday: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    photo: PropTypes.string.isRequired\n};\n\nexport default Profile;","import { connect } from \"react-redux\";\nimport Profile from \"../../components/profile\";\n\nconst mapStateToProps = (state) => {\n\n    return {\n        firstName: state.profile.current.firstName,\n        lastName: state.profile.current.lastName,\n        birthday: state.profile.current.birthday,\n        phoneNumber: state.profile.current.phoneNumber,\n        email: state.profile.current.email,\n        photo: state.profile.current.photo\n    };\n};\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport ProductCart from \"../../containers/products/ProductCart\";\nimport ProductCards from \"../../containers/products/ProductCards\";\nimport ProductList from \"../../containers/products\";\nimport UserList from \"../../containers/users\";\nimport UserForm from \"../../containers/userForm\";\nimport ProductForm from \"../../containers/productForm\";\nimport Profile from \"../../containers/profile\";\nimport {\n    APP,\n    CREATE_PRODUCT_FORM,\n    CREATE_USER_FORM,\n    PRODUCT_CARDS,\n    PRODUCT_CART,\n    PRODUCT_UPDATE,\n    PRODUCTS,\n    USER_PROFILE,\n    USER_UPDATE,\n    USERS\n} from \"../../utils/links/front\";\n\nconst Routers = () => (\n    <Switch>\n        <Route exact path={APP}>\n            <ProductCards/>\n        </Route>\n\n        <Route path={PRODUCTS}>\n            <ProductList/>\n        </Route>\n\n        <Route path={CREATE_PRODUCT_FORM}>\n            <ProductForm/>\n        </Route>\n\n        <Route path={PRODUCT_CARDS}>\n            <ProductCards/>\n        </Route>\n\n        <Route path={PRODUCT_CART}>\n            <ProductCart/>\n        </Route>\n\n        <Route path={PRODUCT_UPDATE}>\n            <ProductForm/>\n        </Route>\n\n        <Route path={USERS}>\n            <UserList/>\n        </Route>\n\n        <Route path={USER_PROFILE}>\n            <Profile/>\n        </Route>\n\n        <Route path={USER_UPDATE}>\n            <UserForm/>\n        </Route>\n\n        <Route path={CREATE_USER_FORM}>\n            <UserForm/>\n        </Route>\n    </Switch>\n);\n\nexport default Routers;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBarComponent from \"../appBar\";\nimport DrawerComponent from \"../drawer\";\nimport Routers from \"../routers\";\n\nconst useStyles = makeStyles((theme) => ({\n    toolbar: theme.mixins.toolbar,\n    root: {\n        display: \"flex\"\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3)\n    }\n}));\n\nconst App = ({ countProductsInCart, photo, onLogOut }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBarComponent photo={photo} onLogOut={onLogOut}/>\n            <DrawerComponent countProductsInCart={countProductsInCart}/>\n\n            <main className={classes.content}>\n                <div className={classes.toolbar}/>\n                <Routers/>\n            </main>\n        </div>\n    );\n};\n\nApp.propTypes = {\n    countProductsInCart: PropTypes.number.isRequired,\n    photo: PropTypes.string.isRequired,\n    onLogOut: PropTypes.func.isRequired\n};\n\nexport default App;","import { connect } from \"react-redux\";\nimport App from \"../../components/app\";\nimport { logOut } from \"../../actions/profile\";\n\nconst mapStateToProps = (state) => ({\n    countProductsInCart: state.products.productsInCart.length,\n    photo: state.profile.current.photo\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onLogOut: () => dispatch(logOut())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const AuthStyles = (theme) => ({\n    paper: {\n        marginTop: theme.spacing(10),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    avatar: {\n        margin: theme.spacing(2),\n        backgroundColor: theme.palette.primary.light\n    },\n    grid: {\n        marginTop: theme.spacing(5)\n    },\n    submit: {\n        margin: theme.spacing(6, 0, 3)\n    }\n});\n\nexport default AuthStyles;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Avatar, Typography } from \"@material-ui/core\";\n\nconst SignHeader = ({ style, Icon, name }) => (\n    <>\n        <Avatar className={style}>\n            <Icon/>\n        </Avatar>\n\n        <Typography component={\"h1\"} variant={\"h5\"}>\n            {name}\n        </Typography>\n    </>\n);\n\nSignHeader.propTypes = {\n    style: PropTypes.string.isRequired,\n    Icon: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired\n};\n\nexport default SignHeader;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\n\nconst SignButton = ({ style, name, isDisabledButton, onClickButton }) => (\n    <Button\n        fullWidth\n        disabled={isDisabledButton()}\n        variant={\"contained\"}\n        color={\"primary\"}\n        className={style}\n        onClick={onClickButton}\n    >\n        {name}\n    </Button>\n);\n\nSignButton.propTypes = {\n    style: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isDisabledButton: PropTypes.func.isRequired,\n    onClickButton: PropTypes.func.isRequired\n};\n\nexport default SignButton;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Grid } from \"@material-ui/core\";\n\nconst SignFooter = ({ linkTo, name }) => (\n    <Grid container justifyContent={\"flex-end\"}>\n        <Grid item>\n            <Button color={\"secondary\"} to={linkTo} component={Link}>\n                {name}\n            </Button>\n        </Grid>\n    </Grid>\n);\n\nSignFooter.propTypes = {\n    linkTo: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n};\n\nexport default SignFooter;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport { LockOutlined } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AuthStyles from \"./AuthStyles\";\nimport Birthday from \"./Birthday\";\nimport TextFieldComponent from \"../TextFieldComponent\";\nimport SignHeader from \"./SignHeader\";\nimport SignButton from \"./SignButton\";\nimport SignFooter from \"./SignFooter\";\nimport { SIGN_IN } from \"../../utils/links/front\";\n\nconst useStyles = makeStyles(AuthStyles);\n\nconst SignUp = ({\n                    firstName, isValidFirstName, onChangeFirstName,\n                    lastName, isValidLastName, onChangeLastName,\n                    birthday, isValidBirthday, onChangeBirthday,\n                    email, isValidEmail, onChangeEmail,\n                    phoneNumber, isValidPhoneNumber, onChangePhone,\n                    photo, isValidPhoto, onChangePhoto,\n                    password, isValidPassword, onChangePassword,\n                    onSignUp\n                }) => {\n    const classes = useStyles();\n\n    const isDisabledButton = () => {\n        return !(\n            isValidFirstName &&\n            isValidLastName &&\n            isValidBirthday &&\n            isValidEmail &&\n            isValidPhoneNumber &&\n            isValidPassword\n        );\n    };\n\n    return (\n        <Container maxWidth={\"xs\"}>\n            <div className={classes.paper}>\n                <SignHeader\n                    style={classes.avatar}\n                    Icon={() => <LockOutlined/>}\n                    name={\"Sign Up\"}\n                />\n\n                <Grid className={classes.grid} container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                        <TextFieldComponent\n                            label={\"First Name\"}\n                            value={firstName}\n                            isValidData={isValidFirstName}\n                            onChangeData={onChangeFirstName}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12} sm={6}>\n                        <TextFieldComponent\n                            label={\"Last Name\"}\n                            value={lastName}\n                            isValidData={isValidLastName}\n                            onChangeData={onChangeLastName}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Birthday\n                            birthday={birthday}\n                            isValidBirthday={isValidBirthday}\n                            onChangeBirthday={onChangeBirthday}\n                        />\n                    </Grid>\n\n                    <TextFieldComponent\n                        label={\"Email Address\"}\n                        value={email}\n                        isValidData={isValidEmail}\n                        onChangeData={onChangeEmail}\n                    />\n\n                    <TextFieldComponent\n                        label={\"Phone Number\"}\n                        value={phoneNumber}\n                        isValidData={isValidPhoneNumber}\n                        onChangeData={onChangePhone}\n                    />\n\n                    <TextFieldComponent\n                        label={\"Photo URL\"}\n                        value={photo}\n                        isValidData={isValidPhoto}\n                        onChangeData={onChangePhoto}\n                    />\n\n                    <TextFieldComponent\n                        label={\"Password\"}\n                        type={\"password\"}\n                        value={password}\n                        isValidData={isValidPassword}\n                        onChangeData={onChangePassword}\n                    />\n                </Grid>\n\n                <SignButton\n                    style={classes.submit}\n                    name={\"Sign Up\"}\n                    isDisabledButton={isDisabledButton}\n                    onClickButton={onSignUp}\n                />\n\n                <SignFooter\n                    linkTo={SIGN_IN}\n                    name={\"Do you have an account? Sign in\"}\n                />\n            </div>\n        </Container>\n    );\n};\n\nSignUp.propTypes = {\n    firstName: PropTypes.string.isRequired,\n    isValidFirstName: PropTypes.bool.isRequired,\n    onChangeFirstName: PropTypes.func.isRequired,\n    lastName: PropTypes.string.isRequired,\n    isValidLastName: PropTypes.bool.isRequired,\n    onChangeLastName: PropTypes.func.isRequired,\n    birthday: PropTypes.string.isRequired,\n    isValidBirthday: PropTypes.bool.isRequired,\n    onChangeBirthday: PropTypes.func.isRequired,\n    email: PropTypes.string.isRequired,\n    isValidEmail: PropTypes.bool.isRequired,\n    onChangeEmail: PropTypes.func.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n    isValidPhoneNumber: PropTypes.bool.isRequired,\n    onChangePhone: PropTypes.func.isRequired,\n    photo: PropTypes.string.isRequired,\n    isValidPhoto: PropTypes.bool.isRequired,\n    onChangePhoto: PropTypes.func.isRequired,\n    password: PropTypes.string.isRequired,\n    isValidPassword: PropTypes.bool.isRequired,\n    onChangePassword: PropTypes.func.isRequired,\n    onSignUp: PropTypes.func.isRequired\n};\n\nexport default SignUp;","import { connect } from \"react-redux\";\nimport SignUp from \"../../components/auth/SignUp\";\nimport { signUp } from \"../../actions/authSaga/signUp\";\nimport {\n    changeBirthday,\n    changeEmail,\n    changeFirstName,\n    changeLastName,\n    changePassword,\n    changePhone,\n    changePhoto\n} from \"../../actions/auth/signUp\";\n\nexport const mapStateToProps = (state) => {\n    return {\n        firstName: state.signUp.firstName,\n        isValidFirstName: state.signUp.isValidFirstName,\n        lastName: state.signUp.lastName,\n        isValidLastName: state.signUp.isValidLastName,\n        birthday: state.signUp.birthday,\n        isValidBirthday: state.signUp.isValidBirthday,\n        email: state.signUp.email,\n        isValidEmail: state.signUp.isValidEmail,\n        phoneNumber: state.signUp.phoneNumber,\n        isValidPhoneNumber: state.signUp.isValidPhoneNumber,\n        photo: state.signUp.photo,\n        isValidPhoto: state.signUp.isValidPhoto,\n        password: state.signUp.password,\n        isValidPassword: state.signUp.isValidPassword\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onChangeFirstName: (firstName) => dispatch(changeFirstName(firstName)),\n        onChangeLastName: (lastName) => dispatch(changeLastName(lastName)),\n        onChangeEmail: (email) => dispatch(changeEmail(email)),\n        onChangePhone: (phone) => dispatch(changePhone(phone)),\n        onChangePhoto: (photo) => dispatch(changePhoto(photo)),\n        onChangePassword: (password) => dispatch(changePassword(password)),\n        onChangeBirthday: (birthday) => dispatch(changeBirthday(birthday)),\n        onSignUp: () => dispatch(signUp())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n\n","import { SIGN_UP_SAGA } from \"../../utils/constants/authSaga\";\n\nexport const signUp = () => ({\n    type: SIGN_UP_SAGA\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport { LockOpen } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AuthStyles from \"./AuthStyles\";\nimport TextFieldComponent from \"../TextFieldComponent\";\nimport SignHeader from \"./SignHeader\";\nimport SignFooter from \"./SignFooter\";\nimport SignButton from \"./SignButton\";\nimport { SIGN_UP } from \"../../utils/links/front\";\n\nconst useStyles = makeStyles(AuthStyles);\n\nconst SignIn = ({ email, isValidEmail, password, isValidPassword, onChangeEmail, onChangePassword, onSignIn }) => {\n    const classes = useStyles();\n    const isDisabledButton = () => !(isValidEmail && isValidPassword);\n\n    return (\n        <Container className={classes.paper} maxWidth={\"xs\"}>\n            <SignHeader\n                style={classes.avatar}\n                Icon={() => <LockOpen/>}\n                name={\"Sign In\"}\n            />\n\n            <Grid className={classes.grid} container spacing={2}>\n                <TextFieldComponent\n                    label={\"Email Address\"}\n                    value={email}\n                    isValidData={isValidEmail}\n                    onChangeData={onChangeEmail}\n                />\n\n                <TextFieldComponent\n                    label={\"Password\"}\n                    type={\"password\"}\n                    value={password}\n                    isValidData={isValidPassword}\n                    onChangeData={onChangePassword}\n                />\n            </Grid>\n\n            <SignButton\n                style={classes.submit}\n                name={\"Log In\"}\n                isDisabledButton={isDisabledButton}\n                onClickButton={onSignIn}\n            />\n\n            <SignFooter\n                linkTo={SIGN_UP}\n                name={\"Don't you have an account? Sign up\"}\n            />\n        </Container>\n    );\n};\n\nSignIn.propTypes = {\n    email: PropTypes.string.isRequired,\n    isValidEmail: PropTypes.bool.isRequired,\n    password: PropTypes.string.isRequired,\n    isValidPassword: PropTypes.bool.isRequired,\n    onChangeEmail: PropTypes.func.isRequired,\n    onChangePassword: PropTypes.func.isRequired,\n    onSignIn: PropTypes.func.isRequired\n};\n\nexport default SignIn;","import { connect } from \"react-redux\";\nimport SignIn from \"../../components/auth/SignIn\";\nimport { signIn } from \"../../actions/authSaga/signIn\";\nimport { changeEmailAtLogin, changePasswordAtLogin } from \"../../actions/auth/signIn\";\n\nconst mapStateToProps = (state) => {\n    return {\n        email: state.signIn.email,\n        password: state.signIn.password,\n        isValidEmail: state.signIn.isValidEmail,\n        isValidPassword: state.signIn.isValidPassword\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onChangeEmail: (email) => dispatch(changeEmailAtLogin(email)),\n        onChangePassword: (password) => dispatch(changePasswordAtLogin(password)),\n        onSignIn: () => dispatch(signIn())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n\n","import { SIGN_IN_SAGA } from \"../../utils/constants/authSaga\";\n\nexport const signIn = () => ({\n    type: SIGN_IN_SAGA\n});","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Switch } from \"react-router\";\nimport App from \"../../containers/app\";\nimport SignUp from \"../../containers/auth/SignUp\";\nimport SignIn from \"../../containers/auth/SignIn\";\nimport { APP, SIGN_IN, SIGN_UP } from \"../../utils/links/front\";\n\nconst AppBody = ({ currentUser }) => (\n    <Switch>\n        <Route path={SIGN_UP}>\n            {currentUser ? <App/> : <SignUp/>}\n        </Route>\n\n        <Route path={SIGN_IN}>\n            {currentUser ? <App/> : <SignIn/>}\n        </Route>\n\n        <Route path={APP}>\n            {currentUser ? <App/> : <SignIn/>}\n        </Route>\n    </Switch>\n);\n\nAppBody.propTypes = {\n    currentUser: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        firstName: PropTypes.string.isRequired,\n        lastName: PropTypes.string.isRequired,\n        birthday: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired,\n        phoneNumber: PropTypes.string.isRequired,\n        photo: PropTypes.string.isRequired,\n        password: PropTypes.string.isRequired\n    })\n};\nexport default AppBody;","import { connect } from \"react-redux\";\nimport AppBody from \"../../components/app/AppBody\";\n\nconst mapStateToProps = (state) => ({\n    currentUser: state.profile.current\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppBody);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n        \"& > * + *\": {\n            marginTop: theme.spacing(2)\n        }\n    }\n}));\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant={\"filled\"} {...props} />;\n}\n\nconst MessageInfo = ({ message, onClose }) => {\n    const classes = useStyles();\n    const { type, text } = message || {};\n\n    const handleClose = (event, reason) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n        onClose();\n    };\n\n    return (\n        <>\n            {\n                message && (\n                    <div className={classes.root}>\n                        <Snackbar open autoHideDuration={6000} onClose={handleClose}>\n                            <Alert onClose={handleClose} severity={type}>\n                                {text}\n                            </Alert>\n                        </Snackbar>\n                    </div>\n                )\n            }\n        </>\n    );\n};\n\nMessageInfo.propTypes = {\n    message: PropTypes.object,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default MessageInfo;","import { connect } from \"react-redux\";\nimport MessageInfo from \"../../components/info\";\nimport { closeMessage } from \"../../actions/info\";\n\nconst mapStateToProps = (state) => {\n    return {\n        message: state.messageInfo.message\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onClose: () => dispatch(closeMessage())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageInfo);","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { worker } from \"./mocks/browser\";\nimport store from \"./store\";\nimport AppBody from \"./containers/app/AppBody\";\nimport MessageInfo from \"./containers/info\";\nimport { BASE_PATH, BASE_PATH_WITH_TRAILING_SLASH, SERVICE_WORKER_URL } from \"./utils/links/front\";\n\nconst theme = createTheme({\n    palette: {\n        type: \"dark\",\n        primary: {\n            main: \"#334e8b\",\n            light: \"#76c7da\"\n        },\n        secondary: {\n            main: \"#d13e45\"\n        }\n    }\n});\n\n(function () {\n    if (window.location.pathname === BASE_PATH) {\n        window.location.pathname = BASE_PATH_WITH_TRAILING_SLASH;\n        return;\n    }\n    worker.start({\n        serviceWorker: {\n            url: SERVICE_WORKER_URL\n        }\n    });\n\n    render(\n        <ThemeProvider theme={theme}>\n            <Provider store={store}>\n                <CssBaseline/>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <BrowserRouter basename={BASE_PATH_WITH_TRAILING_SLASH}>\n                        <AppBody/>\n                        <MessageInfo/>\n                    </BrowserRouter>\n                </MuiPickersUtilsProvider>\n            </Provider>\n        </ThemeProvider>,\n        document.getElementById(\"root\")\n    );\n})();"],"sourceRoot":""}